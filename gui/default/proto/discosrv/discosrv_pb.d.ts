// @generated by protoc-gen-es v2.2.5
// @generated from file discosrv/discosrv.proto (package discosrv, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file discosrv/discosrv.proto.
 */
export declare const file_discosrv_discosrv: GenFile;

/**
 * @generated from message discosrv.DatabaseRecord
 */
export declare type DatabaseRecord = Message<"discosrv.DatabaseRecord"> & {
  /**
   * @generated from field: repeated discosrv.DatabaseAddress addresses = 1;
   */
  addresses: DatabaseAddress[];

  /**
   * Unix nanos, last device announce
   *
   * @generated from field: int64 seen = 3;
   */
  seen: bigint;
};

/**
 * Describes the message discosrv.DatabaseRecord.
 * Use `create(DatabaseRecordSchema)` to create a new message.
 */
export declare const DatabaseRecordSchema: GenMessage<DatabaseRecord>;

/**
 * @generated from message discosrv.ReplicationRecord
 */
export declare type ReplicationRecord = Message<"discosrv.ReplicationRecord"> & {
  /**
   * raw 32 byte device ID
   *
   * @generated from field: bytes key = 1;
   */
  key: Uint8Array;

  /**
   * @generated from field: repeated discosrv.DatabaseAddress addresses = 2;
   */
  addresses: DatabaseAddress[];

  /**
   * Unix nanos, last device announce
   *
   * @generated from field: int64 seen = 3;
   */
  seen: bigint;
};

/**
 * Describes the message discosrv.ReplicationRecord.
 * Use `create(ReplicationRecordSchema)` to create a new message.
 */
export declare const ReplicationRecordSchema: GenMessage<ReplicationRecord>;

/**
 * @generated from message discosrv.DatabaseAddress
 */
export declare type DatabaseAddress = Message<"discosrv.DatabaseAddress"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * Unix nanos
   *
   * @generated from field: int64 expires = 2;
   */
  expires: bigint;
};

/**
 * Describes the message discosrv.DatabaseAddress.
 * Use `create(DatabaseAddressSchema)` to create a new message.
 */
export declare const DatabaseAddressSchema: GenMessage<DatabaseAddress>;

