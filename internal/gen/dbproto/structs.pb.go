// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: dbproto/structs.proto

package dbproto

import (
	bep "github.com/syncthing/syncthing/internal/gen/bep"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Same as bep.FileInfo, but without blocks
type FileInfoTruncated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ModifiedS     int64                  `protobuf:"varint,5,opt,name=modified_s,json=modifiedS,proto3" json:"modified_s,omitempty"`
	ModifiedBy    uint64                 `protobuf:"varint,12,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
	Version       *bep.Vector            `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	Sequence      int64                  `protobuf:"varint,10,opt,name=sequence,proto3" json:"sequence,omitempty"`
	SymlinkTarget []byte                 `protobuf:"bytes,17,opt,name=symlink_target,json=symlinkTarget,proto3" json:"symlink_target,omitempty"`
	BlocksHash    []byte                 `protobuf:"bytes,18,opt,name=blocks_hash,json=blocksHash,proto3" json:"blocks_hash,omitempty"`
	Encrypted     []byte                 `protobuf:"bytes,19,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	Type          bep.FileInfoType       `protobuf:"varint,2,opt,name=type,proto3,enum=bep.FileInfoType" json:"type,omitempty"`
	Permissions   uint32                 `protobuf:"varint,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
	ModifiedNs    int32                  `protobuf:"varint,11,opt,name=modified_ns,json=modifiedNs,proto3" json:"modified_ns,omitempty"`
	BlockSize     int32                  `protobuf:"varint,13,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	Platform      *bep.PlatformData      `protobuf:"bytes,14,opt,name=platform,proto3" json:"platform,omitempty"`
	// The local_flags fields stores flags that are relevant to the local
	// host only. It is not part of the protocol, doesn't get sent or
	// received (we make sure to zero it), nonetheless we need it on our
	// struct and to be able to serialize it to/from the database.
	LocalFlags uint32 `protobuf:"varint,1000,opt,name=local_flags,json=localFlags,proto3" json:"local_flags,omitempty"`
	// The version_hash is an implementation detail and not part of the wire
	// format.
	VersionHash []byte `protobuf:"bytes,1001,opt,name=version_hash,json=versionHash,proto3" json:"version_hash,omitempty"`
	// The time when the inode was last changed (i.e., permissions, xattrs
	// etc changed). This is host-local, not sent over the wire.
	InodeChangeNs int64 `protobuf:"varint,1002,opt,name=inode_change_ns,json=inodeChangeNs,proto3" json:"inode_change_ns,omitempty"`
	// The size of the data appended to the encrypted file on disk. This is
	// host-local, not sent over the wire.
	EncryptionTrailerSize int32 `protobuf:"varint,1003,opt,name=encryption_trailer_size,json=encryptionTrailerSize,proto3" json:"encryption_trailer_size,omitempty"`
	Deleted               bool  `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Invalid               bool  `protobuf:"varint,7,opt,name=invalid,proto3" json:"invalid,omitempty"`
	NoPermissions         bool  `protobuf:"varint,8,opt,name=no_permissions,json=noPermissions,proto3" json:"no_permissions,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *FileInfoTruncated) Reset() {
	*x = FileInfoTruncated{}
	mi := &file_dbproto_structs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfoTruncated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoTruncated) ProtoMessage() {}

func (x *FileInfoTruncated) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoTruncated.ProtoReflect.Descriptor instead.
func (*FileInfoTruncated) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfoTruncated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfoTruncated) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfoTruncated) GetModifiedS() int64 {
	if x != nil {
		return x.ModifiedS
	}
	return 0
}

func (x *FileInfoTruncated) GetModifiedBy() uint64 {
	if x != nil {
		return x.ModifiedBy
	}
	return 0
}

func (x *FileInfoTruncated) GetVersion() *bep.Vector {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *FileInfoTruncated) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *FileInfoTruncated) GetSymlinkTarget() []byte {
	if x != nil {
		return x.SymlinkTarget
	}
	return nil
}

func (x *FileInfoTruncated) GetBlocksHash() []byte {
	if x != nil {
		return x.BlocksHash
	}
	return nil
}

func (x *FileInfoTruncated) GetEncrypted() []byte {
	if x != nil {
		return x.Encrypted
	}
	return nil
}

func (x *FileInfoTruncated) GetType() bep.FileInfoType {
	if x != nil {
		return x.Type
	}
	return bep.FileInfoType(0)
}

func (x *FileInfoTruncated) GetPermissions() uint32 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *FileInfoTruncated) GetModifiedNs() int32 {
	if x != nil {
		return x.ModifiedNs
	}
	return 0
}

func (x *FileInfoTruncated) GetBlockSize() int32 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *FileInfoTruncated) GetPlatform() *bep.PlatformData {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *FileInfoTruncated) GetLocalFlags() uint32 {
	if x != nil {
		return x.LocalFlags
	}
	return 0
}

func (x *FileInfoTruncated) GetVersionHash() []byte {
	if x != nil {
		return x.VersionHash
	}
	return nil
}

func (x *FileInfoTruncated) GetInodeChangeNs() int64 {
	if x != nil {
		return x.InodeChangeNs
	}
	return 0
}

func (x *FileInfoTruncated) GetEncryptionTrailerSize() int32 {
	if x != nil {
		return x.EncryptionTrailerSize
	}
	return 0
}

func (x *FileInfoTruncated) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *FileInfoTruncated) GetInvalid() bool {
	if x != nil {
		return x.Invalid
	}
	return false
}

func (x *FileInfoTruncated) GetNoPermissions() bool {
	if x != nil {
		return x.NoPermissions
	}
	return false
}

type FileVersion struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Version        *bep.Vector            `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Deleted        bool                   `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Devices        [][]byte               `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`
	InvalidDevices [][]byte               `protobuf:"bytes,4,rep,name=invalid_devices,json=invalidDevices,proto3" json:"invalid_devices,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FileVersion) Reset() {
	*x = FileVersion{}
	mi := &file_dbproto_structs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileVersion) ProtoMessage() {}

func (x *FileVersion) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileVersion.ProtoReflect.Descriptor instead.
func (*FileVersion) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{1}
}

func (x *FileVersion) GetVersion() *bep.Vector {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *FileVersion) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *FileVersion) GetDevices() [][]byte {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *FileVersion) GetInvalidDevices() [][]byte {
	if x != nil {
		return x.InvalidDevices
	}
	return nil
}

type VersionList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Versions      []*FileVersion         `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionList) Reset() {
	*x = VersionList{}
	mi := &file_dbproto_structs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionList) ProtoMessage() {}

func (x *VersionList) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionList.ProtoReflect.Descriptor instead.
func (*VersionList) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{2}
}

func (x *VersionList) GetVersions() []*FileVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

// BlockList is the structure used to store block lists
type BlockList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*bep.BlockInfo       `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockList) Reset() {
	*x = BlockList{}
	mi := &file_dbproto_structs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockList) ProtoMessage() {}

func (x *BlockList) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockList.ProtoReflect.Descriptor instead.
func (*BlockList) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{3}
}

func (x *BlockList) GetBlocks() []*bep.BlockInfo {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// IndirectionHashesOnly is used to only unmarshal the indirection hashes
// from a FileInfo
type IndirectionHashesOnly struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlocksHash    []byte                 `protobuf:"bytes,18,opt,name=blocks_hash,json=blocksHash,proto3" json:"blocks_hash,omitempty"`
	VersionHash   []byte                 `protobuf:"bytes,1001,opt,name=version_hash,json=versionHash,proto3" json:"version_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndirectionHashesOnly) Reset() {
	*x = IndirectionHashesOnly{}
	mi := &file_dbproto_structs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndirectionHashesOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndirectionHashesOnly) ProtoMessage() {}

func (x *IndirectionHashesOnly) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndirectionHashesOnly.ProtoReflect.Descriptor instead.
func (*IndirectionHashesOnly) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{4}
}

func (x *IndirectionHashesOnly) GetBlocksHash() []byte {
	if x != nil {
		return x.BlocksHash
	}
	return nil
}

func (x *IndirectionHashesOnly) GetVersionHash() []byte {
	if x != nil {
		return x.VersionHash
	}
	return nil
}

// For each folder and device we keep one of these to track the current
// counts and sequence. We also keep one for the global state of the folder.
type Counts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         int32                  `protobuf:"varint,1,opt,name=files,proto3" json:"files,omitempty"`
	Directories   int32                  `protobuf:"varint,2,opt,name=directories,proto3" json:"directories,omitempty"`
	Symlinks      int32                  `protobuf:"varint,3,opt,name=symlinks,proto3" json:"symlinks,omitempty"`
	Deleted       int32                  `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Bytes         int64                  `protobuf:"varint,5,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Sequence      int64                  `protobuf:"varint,6,opt,name=sequence,proto3" json:"sequence,omitempty"`                        // zero for the global state
	DeviceId      []byte                 `protobuf:"bytes,17,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`        // device ID for remote devices, or special values for local/global
	LocalFlags    uint32                 `protobuf:"varint,18,opt,name=local_flags,json=localFlags,proto3" json:"local_flags,omitempty"` // the local flag for this count bucket
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Counts) Reset() {
	*x = Counts{}
	mi := &file_dbproto_structs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Counts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Counts) ProtoMessage() {}

func (x *Counts) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Counts.ProtoReflect.Descriptor instead.
func (*Counts) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{5}
}

func (x *Counts) GetFiles() int32 {
	if x != nil {
		return x.Files
	}
	return 0
}

func (x *Counts) GetDirectories() int32 {
	if x != nil {
		return x.Directories
	}
	return 0
}

func (x *Counts) GetSymlinks() int32 {
	if x != nil {
		return x.Symlinks
	}
	return 0
}

func (x *Counts) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *Counts) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *Counts) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Counts) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *Counts) GetLocalFlags() uint32 {
	if x != nil {
		return x.LocalFlags
	}
	return 0
}

type CountsSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Counts        []*Counts              `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty"`
	Created       int64                  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"` // unix nanos
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountsSet) Reset() {
	*x = CountsSet{}
	mi := &file_dbproto_structs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountsSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountsSet) ProtoMessage() {}

func (x *CountsSet) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountsSet.ProtoReflect.Descriptor instead.
func (*CountsSet) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{6}
}

func (x *CountsSet) GetCounts() []*Counts {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *CountsSet) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type ObservedFolder struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Time             *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Label            string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	ReceiveEncrypted bool                   `protobuf:"varint,3,opt,name=receive_encrypted,json=receiveEncrypted,proto3" json:"receive_encrypted,omitempty"`
	RemoteEncrypted  bool                   `protobuf:"varint,4,opt,name=remote_encrypted,json=remoteEncrypted,proto3" json:"remote_encrypted,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ObservedFolder) Reset() {
	*x = ObservedFolder{}
	mi := &file_dbproto_structs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObservedFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservedFolder) ProtoMessage() {}

func (x *ObservedFolder) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservedFolder.ProtoReflect.Descriptor instead.
func (*ObservedFolder) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{7}
}

func (x *ObservedFolder) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ObservedFolder) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ObservedFolder) GetReceiveEncrypted() bool {
	if x != nil {
		return x.ReceiveEncrypted
	}
	return false
}

func (x *ObservedFolder) GetRemoteEncrypted() bool {
	if x != nil {
		return x.RemoteEncrypted
	}
	return false
}

type ObservedDevice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObservedDevice) Reset() {
	*x = ObservedDevice{}
	mi := &file_dbproto_structs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObservedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservedDevice) ProtoMessage() {}

func (x *ObservedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_dbproto_structs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservedDevice.ProtoReflect.Descriptor instead.
func (*ObservedDevice) Descriptor() ([]byte, []int) {
	return file_dbproto_structs_proto_rawDescGZIP(), []int{8}
}

func (x *ObservedDevice) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ObservedDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObservedDevice) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_dbproto_structs_proto protoreflect.FileDescriptor

const file_dbproto_structs_proto_rawDesc = "" +
	"\n" +
	"\x15dbproto/structs.proto\x12\adbproto\x1a\rbep/bep.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe5\x05\n" +
	"\x11FileInfoTruncated\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x1d\n" +
	"\n" +
	"modified_s\x18\x05 \x01(\x03R\tmodifiedS\x12\x1f\n" +
	"\vmodified_by\x18\f \x01(\x04R\n" +
	"modifiedBy\x12%\n" +
	"\aversion\x18\t \x01(\v2\v.bep.VectorR\aversion\x12\x1a\n" +
	"\bsequence\x18\n" +
	" \x01(\x03R\bsequence\x12%\n" +
	"\x0esymlink_target\x18\x11 \x01(\fR\rsymlinkTarget\x12\x1f\n" +
	"\vblocks_hash\x18\x12 \x01(\fR\n" +
	"blocksHash\x12\x1c\n" +
	"\tencrypted\x18\x13 \x01(\fR\tencrypted\x12%\n" +
	"\x04type\x18\x02 \x01(\x0e2\x11.bep.FileInfoTypeR\x04type\x12 \n" +
	"\vpermissions\x18\x04 \x01(\rR\vpermissions\x12\x1f\n" +
	"\vmodified_ns\x18\v \x01(\x05R\n" +
	"modifiedNs\x12\x1d\n" +
	"\n" +
	"block_size\x18\r \x01(\x05R\tblockSize\x12-\n" +
	"\bplatform\x18\x0e \x01(\v2\x11.bep.PlatformDataR\bplatform\x12 \n" +
	"\vlocal_flags\x18\xe8\a \x01(\rR\n" +
	"localFlags\x12\"\n" +
	"\fversion_hash\x18\xe9\a \x01(\fR\vversionHash\x12'\n" +
	"\x0finode_change_ns\x18\xea\a \x01(\x03R\rinodeChangeNs\x127\n" +
	"\x17encryption_trailer_size\x18\xeb\a \x01(\x05R\x15encryptionTrailerSize\x12\x18\n" +
	"\adeleted\x18\x06 \x01(\bR\adeleted\x12\x18\n" +
	"\ainvalid\x18\a \x01(\bR\ainvalid\x12%\n" +
	"\x0eno_permissions\x18\b \x01(\bR\rnoPermissionsJ\x04\b\x10\x10\x11\"\x91\x01\n" +
	"\vFileVersion\x12%\n" +
	"\aversion\x18\x01 \x01(\v2\v.bep.VectorR\aversion\x12\x18\n" +
	"\adeleted\x18\x02 \x01(\bR\adeleted\x12\x18\n" +
	"\adevices\x18\x03 \x03(\fR\adevices\x12'\n" +
	"\x0finvalid_devices\x18\x04 \x03(\fR\x0einvalidDevices\"?\n" +
	"\vVersionList\x120\n" +
	"\bversions\x18\x01 \x03(\v2\x14.dbproto.FileVersionR\bversions\"3\n" +
	"\tBlockList\x12&\n" +
	"\x06blocks\x18\x01 \x03(\v2\x0e.bep.BlockInfoR\x06blocks\"\\\n" +
	"\x15IndirectionHashesOnly\x12\x1f\n" +
	"\vblocks_hash\x18\x12 \x01(\fR\n" +
	"blocksHash\x12\"\n" +
	"\fversion_hash\x18\xe9\a \x01(\fR\vversionHash\"\xe6\x01\n" +
	"\x06Counts\x12\x14\n" +
	"\x05files\x18\x01 \x01(\x05R\x05files\x12 \n" +
	"\vdirectories\x18\x02 \x01(\x05R\vdirectories\x12\x1a\n" +
	"\bsymlinks\x18\x03 \x01(\x05R\bsymlinks\x12\x18\n" +
	"\adeleted\x18\x04 \x01(\x05R\adeleted\x12\x14\n" +
	"\x05bytes\x18\x05 \x01(\x03R\x05bytes\x12\x1a\n" +
	"\bsequence\x18\x06 \x01(\x03R\bsequence\x12\x1b\n" +
	"\tdevice_id\x18\x11 \x01(\fR\bdeviceId\x12\x1f\n" +
	"\vlocal_flags\x18\x12 \x01(\rR\n" +
	"localFlags\"N\n" +
	"\tCountsSet\x12'\n" +
	"\x06counts\x18\x01 \x03(\v2\x0f.dbproto.CountsR\x06counts\x12\x18\n" +
	"\acreated\x18\x02 \x01(\x03R\acreated\"\xae\x01\n" +
	"\x0eObservedFolder\x12.\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12+\n" +
	"\x11receive_encrypted\x18\x03 \x01(\bR\x10receiveEncrypted\x12)\n" +
	"\x10remote_encrypted\x18\x04 \x01(\bR\x0fremoteEncrypted\"n\n" +
	"\x0eObservedDevice\x12.\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddressB\x8c\x01\n" +
	"\vcom.dbprotoB\fStructsProtoP\x01Z3github.com/syncthing/syncthing/internal/gen/dbproto\xa2\x02\x03DXX\xaa\x02\aDbproto\xca\x02\aDbproto\xe2\x02\x13Dbproto\\GPBMetadata\xea\x02\aDbprotob\x06proto3"

var (
	file_dbproto_structs_proto_rawDescOnce sync.Once
	file_dbproto_structs_proto_rawDescData []byte
)

func file_dbproto_structs_proto_rawDescGZIP() []byte {
	file_dbproto_structs_proto_rawDescOnce.Do(func() {
		file_dbproto_structs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dbproto_structs_proto_rawDesc), len(file_dbproto_structs_proto_rawDesc)))
	})
	return file_dbproto_structs_proto_rawDescData
}

var file_dbproto_structs_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dbproto_structs_proto_goTypes = []any{
	(*FileInfoTruncated)(nil),     // 0: dbproto.FileInfoTruncated
	(*FileVersion)(nil),           // 1: dbproto.FileVersion
	(*VersionList)(nil),           // 2: dbproto.VersionList
	(*BlockList)(nil),             // 3: dbproto.BlockList
	(*IndirectionHashesOnly)(nil), // 4: dbproto.IndirectionHashesOnly
	(*Counts)(nil),                // 5: dbproto.Counts
	(*CountsSet)(nil),             // 6: dbproto.CountsSet
	(*ObservedFolder)(nil),        // 7: dbproto.ObservedFolder
	(*ObservedDevice)(nil),        // 8: dbproto.ObservedDevice
	(*bep.Vector)(nil),            // 9: bep.Vector
	(bep.FileInfoType)(0),         // 10: bep.FileInfoType
	(*bep.PlatformData)(nil),      // 11: bep.PlatformData
	(*bep.BlockInfo)(nil),         // 12: bep.BlockInfo
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_dbproto_structs_proto_depIdxs = []int32{
	9,  // 0: dbproto.FileInfoTruncated.version:type_name -> bep.Vector
	10, // 1: dbproto.FileInfoTruncated.type:type_name -> bep.FileInfoType
	11, // 2: dbproto.FileInfoTruncated.platform:type_name -> bep.PlatformData
	9,  // 3: dbproto.FileVersion.version:type_name -> bep.Vector
	1,  // 4: dbproto.VersionList.versions:type_name -> dbproto.FileVersion
	12, // 5: dbproto.BlockList.blocks:type_name -> bep.BlockInfo
	5,  // 6: dbproto.CountsSet.counts:type_name -> dbproto.Counts
	13, // 7: dbproto.ObservedFolder.time:type_name -> google.protobuf.Timestamp
	13, // 8: dbproto.ObservedDevice.time:type_name -> google.protobuf.Timestamp
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_dbproto_structs_proto_init() }
func file_dbproto_structs_proto_init() {
	if File_dbproto_structs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dbproto_structs_proto_rawDesc), len(file_dbproto_structs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dbproto_structs_proto_goTypes,
		DependencyIndexes: file_dbproto_structs_proto_depIdxs,
		MessageInfos:      file_dbproto_structs_proto_msgTypes,
	}.Build()
	File_dbproto_structs_proto = out.File
	file_dbproto_structs_proto_goTypes = nil
	file_dbproto_structs_proto_depIdxs = nil
}
