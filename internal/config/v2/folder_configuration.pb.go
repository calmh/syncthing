// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: config/v2/folder_configuration.proto

package configv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FolderType int32

const (
	FolderType_FOLDER_TYPE_UNSPECIFIED       FolderType = 0
	FolderType_FOLDER_TYPE_SEND_RECEIVE      FolderType = 1
	FolderType_FOLDER_TYPE_SEND_ONLY         FolderType = 2
	FolderType_FOLDER_TYPE_RECEIVE_ONLY      FolderType = 3
	FolderType_FOLDER_TYPE_RECEIVE_ENCRYPTED FolderType = 4
)

// Enum value maps for FolderType.
var (
	FolderType_name = map[int32]string{
		0: "FOLDER_TYPE_UNSPECIFIED",
		1: "FOLDER_TYPE_SEND_RECEIVE",
		2: "FOLDER_TYPE_SEND_ONLY",
		3: "FOLDER_TYPE_RECEIVE_ONLY",
		4: "FOLDER_TYPE_RECEIVE_ENCRYPTED",
	}
	FolderType_value = map[string]int32{
		"FOLDER_TYPE_UNSPECIFIED":       0,
		"FOLDER_TYPE_SEND_RECEIVE":      1,
		"FOLDER_TYPE_SEND_ONLY":         2,
		"FOLDER_TYPE_RECEIVE_ONLY":      3,
		"FOLDER_TYPE_RECEIVE_ENCRYPTED": 4,
	}
)

func (x FolderType) Enum() *FolderType {
	p := new(FolderType)
	*p = x
	return p
}

func (x FolderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FolderType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v2_folder_configuration_proto_enumTypes[0].Descriptor()
}

func (FolderType) Type() protoreflect.EnumType {
	return &file_config_v2_folder_configuration_proto_enumTypes[0]
}

func (x FolderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type FilesystemType int32

const (
	FilesystemType_FILESYSTEM_TYPE_UNSPECIFIED FilesystemType = 0
	FilesystemType_FILESYSTEM_TYPE_BASIC       FilesystemType = 1
	FilesystemType_FILESYSTEM_TYPE_FAKE        FilesystemType = 2
)

// Enum value maps for FilesystemType.
var (
	FilesystemType_name = map[int32]string{
		0: "FILESYSTEM_TYPE_UNSPECIFIED",
		1: "FILESYSTEM_TYPE_BASIC",
		2: "FILESYSTEM_TYPE_FAKE",
	}
	FilesystemType_value = map[string]int32{
		"FILESYSTEM_TYPE_UNSPECIFIED": 0,
		"FILESYSTEM_TYPE_BASIC":       1,
		"FILESYSTEM_TYPE_FAKE":        2,
	}
)

func (x FilesystemType) Enum() *FilesystemType {
	p := new(FilesystemType)
	*p = x
	return p
}

func (x FilesystemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilesystemType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v2_folder_configuration_proto_enumTypes[1].Descriptor()
}

func (FilesystemType) Type() protoreflect.EnumType {
	return &file_config_v2_folder_configuration_proto_enumTypes[1]
}

func (x FilesystemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type PullOrder int32

const (
	PullOrder_PULL_ORDER_UNSPECIFIED    PullOrder = 0
	PullOrder_PULL_ORDER_RANDOM         PullOrder = 1
	PullOrder_PULL_ORDER_ALPHABETIC     PullOrder = 2
	PullOrder_PULL_ORDER_SMALLEST_FIRST PullOrder = 3
	PullOrder_PULL_ORDER_LARGEST_FIRST  PullOrder = 4
	PullOrder_PULL_ORDER_OLDEST_FIRST   PullOrder = 5
	PullOrder_PULL_ORDER_NEWEST_FIRST   PullOrder = 6
)

// Enum value maps for PullOrder.
var (
	PullOrder_name = map[int32]string{
		0: "PULL_ORDER_UNSPECIFIED",
		1: "PULL_ORDER_RANDOM",
		2: "PULL_ORDER_ALPHABETIC",
		3: "PULL_ORDER_SMALLEST_FIRST",
		4: "PULL_ORDER_LARGEST_FIRST",
		5: "PULL_ORDER_OLDEST_FIRST",
		6: "PULL_ORDER_NEWEST_FIRST",
	}
	PullOrder_value = map[string]int32{
		"PULL_ORDER_UNSPECIFIED":    0,
		"PULL_ORDER_RANDOM":         1,
		"PULL_ORDER_ALPHABETIC":     2,
		"PULL_ORDER_SMALLEST_FIRST": 3,
		"PULL_ORDER_LARGEST_FIRST":  4,
		"PULL_ORDER_OLDEST_FIRST":   5,
		"PULL_ORDER_NEWEST_FIRST":   6,
	}
)

func (x PullOrder) Enum() *PullOrder {
	p := new(PullOrder)
	*p = x
	return p
}

func (x PullOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PullOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v2_folder_configuration_proto_enumTypes[2].Descriptor()
}

func (PullOrder) Type() protoreflect.EnumType {
	return &file_config_v2_folder_configuration_proto_enumTypes[2]
}

func (x PullOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type BlockPullOrder int32

const (
	BlockPullOrder_BLOCK_PULL_ORDER_UNSPECIFIED BlockPullOrder = 0
	BlockPullOrder_BLOCK_PULL_ORDER_STANDARD    BlockPullOrder = 1
	BlockPullOrder_BLOCK_PULL_ORDER_RANDOM      BlockPullOrder = 2
	BlockPullOrder_BLOCK_PULL_ORDER_IN_ORDER    BlockPullOrder = 3
)

// Enum value maps for BlockPullOrder.
var (
	BlockPullOrder_name = map[int32]string{
		0: "BLOCK_PULL_ORDER_UNSPECIFIED",
		1: "BLOCK_PULL_ORDER_STANDARD",
		2: "BLOCK_PULL_ORDER_RANDOM",
		3: "BLOCK_PULL_ORDER_IN_ORDER",
	}
	BlockPullOrder_value = map[string]int32{
		"BLOCK_PULL_ORDER_UNSPECIFIED": 0,
		"BLOCK_PULL_ORDER_STANDARD":    1,
		"BLOCK_PULL_ORDER_RANDOM":      2,
		"BLOCK_PULL_ORDER_IN_ORDER":    3,
	}
)

func (x BlockPullOrder) Enum() *BlockPullOrder {
	p := new(BlockPullOrder)
	*p = x
	return p
}

func (x BlockPullOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockPullOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v2_folder_configuration_proto_enumTypes[3].Descriptor()
}

func (BlockPullOrder) Type() protoreflect.EnumType {
	return &file_config_v2_folder_configuration_proto_enumTypes[3]
}

func (x BlockPullOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type CopyRangeMethod int32

const (
	CopyRangeMethod_COPY_RANGE_METHOD_UNSPECIFIED       CopyRangeMethod = 0
	CopyRangeMethod_COPY_RANGE_METHOD_STANDARD          CopyRangeMethod = 1
	CopyRangeMethod_COPY_RANGE_METHOD_IOCTL             CopyRangeMethod = 2
	CopyRangeMethod_COPY_RANGE_METHOD_COPY_FILE_RANGE   CopyRangeMethod = 3
	CopyRangeMethod_COPY_RANGE_METHOD_SEND_FILE         CopyRangeMethod = 4
	CopyRangeMethod_COPY_RANGE_METHOD_DUPLICATE_EXTENTS CopyRangeMethod = 5
	CopyRangeMethod_COPY_RANGE_METHOD_ALL_WITH_FALLBACK CopyRangeMethod = 6
)

// Enum value maps for CopyRangeMethod.
var (
	CopyRangeMethod_name = map[int32]string{
		0: "COPY_RANGE_METHOD_UNSPECIFIED",
		1: "COPY_RANGE_METHOD_STANDARD",
		2: "COPY_RANGE_METHOD_IOCTL",
		3: "COPY_RANGE_METHOD_COPY_FILE_RANGE",
		4: "COPY_RANGE_METHOD_SEND_FILE",
		5: "COPY_RANGE_METHOD_DUPLICATE_EXTENTS",
		6: "COPY_RANGE_METHOD_ALL_WITH_FALLBACK",
	}
	CopyRangeMethod_value = map[string]int32{
		"COPY_RANGE_METHOD_UNSPECIFIED":       0,
		"COPY_RANGE_METHOD_STANDARD":          1,
		"COPY_RANGE_METHOD_IOCTL":             2,
		"COPY_RANGE_METHOD_COPY_FILE_RANGE":   3,
		"COPY_RANGE_METHOD_SEND_FILE":         4,
		"COPY_RANGE_METHOD_DUPLICATE_EXTENTS": 5,
		"COPY_RANGE_METHOD_ALL_WITH_FALLBACK": 6,
	}
)

func (x CopyRangeMethod) Enum() *CopyRangeMethod {
	p := new(CopyRangeMethod)
	*p = x
	return p
}

func (x CopyRangeMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CopyRangeMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v2_folder_configuration_proto_enumTypes[4].Descriptor()
}

func (CopyRangeMethod) Type() protoreflect.EnumType {
	return &file_config_v2_folder_configuration_proto_enumTypes[4]
}

func (x CopyRangeMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VersioningType int32

const (
	VersioningType_VERSIONING_TYPE_UNSPECIFIED VersioningType = 0
	VersioningType_VERSIONING_TYPE_TRASHCAN    VersioningType = 1
	VersioningType_VERSIONING_TYPE_SIMPLE      VersioningType = 2
	VersioningType_VERSIONING_TYPE_STAGGERED   VersioningType = 3
	VersioningType_VERSIONING_TYPE_EXTERNAL    VersioningType = 4
)

// Enum value maps for VersioningType.
var (
	VersioningType_name = map[int32]string{
		0: "VERSIONING_TYPE_UNSPECIFIED",
		1: "VERSIONING_TYPE_TRASHCAN",
		2: "VERSIONING_TYPE_SIMPLE",
		3: "VERSIONING_TYPE_STAGGERED",
		4: "VERSIONING_TYPE_EXTERNAL",
	}
	VersioningType_value = map[string]int32{
		"VERSIONING_TYPE_UNSPECIFIED": 0,
		"VERSIONING_TYPE_TRASHCAN":    1,
		"VERSIONING_TYPE_SIMPLE":      2,
		"VERSIONING_TYPE_STAGGERED":   3,
		"VERSIONING_TYPE_EXTERNAL":    4,
	}
)

func (x VersioningType) Enum() *VersioningType {
	p := new(VersioningType)
	*p = x
	return p
}

func (x VersioningType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersioningType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v2_folder_configuration_proto_enumTypes[5].Descriptor()
}

func (VersioningType) Type() protoreflect.EnumType {
	return &file_config_v2_folder_configuration_proto_enumTypes[5]
}

func (x VersioningType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type FolderConfiguration struct {
	state                        protoimpl.MessageState                 `protogen:"opaque.v1"`
	xxx_hidden_Type              FolderType                             `protobuf:"varint,1,opt,name=type,enum=syncthing.config.v2.FolderType,def=1"`
	xxx_hidden_FolderId          *string                                `protobuf:"bytes,2,opt,name=folder_id,json=folderId"`
	xxx_hidden_Enabled           bool                                   `protobuf:"varint,3,opt,name=enabled,def=1"`
	xxx_hidden_Label             *string                                `protobuf:"bytes,4,opt,name=label"`
	xxx_hidden_MarkerName        *string                                `protobuf:"bytes,5,opt,name=marker_name,json=markerName,def=.stfolder"`
	xxx_hidden_Filesystem        *FolderConfiguration_Filesystem        `protobuf:"bytes,6,opt,name=filesystem"`
	xxx_hidden_FilesystemOptions *FolderConfiguration_FilesystemOptions `protobuf:"bytes,7,opt,name=filesystem_options,json=filesystemOptions"`
	xxx_hidden_SharedWith        *[]*FolderConfiguration_Sharing        `protobuf:"bytes,8,rep,name=shared_with,json=sharedWith"`
	xxx_hidden_Scanning          *FolderConfiguration_Scanning          `protobuf:"bytes,9,opt,name=scanning"`
	xxx_hidden_Pulling           *FolderConfiguration_Pulling           `protobuf:"bytes,10,opt,name=pulling"`
	xxx_hidden_Versioning        *FolderConfiguration_Versioning        `protobuf:"bytes,11,opt,name=versioning"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

// Default values for FolderConfiguration fields.
const (
	Default_FolderConfiguration_Type       = FolderType_FOLDER_TYPE_SEND_RECEIVE
	Default_FolderConfiguration_Enabled    = bool(true)
	Default_FolderConfiguration_MarkerName = string(".stfolder")
)

func (x *FolderConfiguration) Reset() {
	*x = FolderConfiguration{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration) ProtoMessage() {}

func (x *FolderConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration) GetType() FolderType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return Default_FolderConfiguration_Type
}

func (x *FolderConfiguration) GetFolderId() string {
	if x != nil {
		if x.xxx_hidden_FolderId != nil {
			return *x.xxx_hidden_FolderId
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration) GetEnabled() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Enabled
		}
	}
	return Default_FolderConfiguration_Enabled
}

func (x *FolderConfiguration) GetLabel() string {
	if x != nil {
		if x.xxx_hidden_Label != nil {
			return *x.xxx_hidden_Label
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration) GetMarkerName() string {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			if x.xxx_hidden_MarkerName != nil {
				return *x.xxx_hidden_MarkerName
			}
			return Default_FolderConfiguration_MarkerName
		}
	}
	return Default_FolderConfiguration_MarkerName
}

func (x *FolderConfiguration) GetFilesystem() *FolderConfiguration_Filesystem {
	if x != nil {
		return x.xxx_hidden_Filesystem
	}
	return nil
}

func (x *FolderConfiguration) GetFilesystemOptions() *FolderConfiguration_FilesystemOptions {
	if x != nil {
		return x.xxx_hidden_FilesystemOptions
	}
	return nil
}

func (x *FolderConfiguration) GetSharedWith() []*FolderConfiguration_Sharing {
	if x != nil {
		if x.xxx_hidden_SharedWith != nil {
			return *x.xxx_hidden_SharedWith
		}
	}
	return nil
}

func (x *FolderConfiguration) GetScanning() *FolderConfiguration_Scanning {
	if x != nil {
		return x.xxx_hidden_Scanning
	}
	return nil
}

func (x *FolderConfiguration) GetPulling() *FolderConfiguration_Pulling {
	if x != nil {
		return x.xxx_hidden_Pulling
	}
	return nil
}

func (x *FolderConfiguration) GetVersioning() *FolderConfiguration_Versioning {
	if x != nil {
		return x.xxx_hidden_Versioning
	}
	return nil
}

func (x *FolderConfiguration) SetType(v FolderType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *FolderConfiguration) SetFolderId(v string) {
	x.xxx_hidden_FolderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *FolderConfiguration) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *FolderConfiguration) SetLabel(v string) {
	x.xxx_hidden_Label = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *FolderConfiguration) SetMarkerName(v string) {
	x.xxx_hidden_MarkerName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *FolderConfiguration) SetFilesystem(v *FolderConfiguration_Filesystem) {
	x.xxx_hidden_Filesystem = v
}

func (x *FolderConfiguration) SetFilesystemOptions(v *FolderConfiguration_FilesystemOptions) {
	x.xxx_hidden_FilesystemOptions = v
}

func (x *FolderConfiguration) SetSharedWith(v []*FolderConfiguration_Sharing) {
	x.xxx_hidden_SharedWith = &v
}

func (x *FolderConfiguration) SetScanning(v *FolderConfiguration_Scanning) {
	x.xxx_hidden_Scanning = v
}

func (x *FolderConfiguration) SetPulling(v *FolderConfiguration_Pulling) {
	x.xxx_hidden_Pulling = v
}

func (x *FolderConfiguration) SetVersioning(v *FolderConfiguration_Versioning) {
	x.xxx_hidden_Versioning = v
}

func (x *FolderConfiguration) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration) HasFolderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration) HasLabel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration) HasMarkerName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *FolderConfiguration) HasFilesystem() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filesystem != nil
}

func (x *FolderConfiguration) HasFilesystemOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FilesystemOptions != nil
}

func (x *FolderConfiguration) HasScanning() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Scanning != nil
}

func (x *FolderConfiguration) HasPulling() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pulling != nil
}

func (x *FolderConfiguration) HasVersioning() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Versioning != nil
}

func (x *FolderConfiguration) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration) ClearFolderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FolderId = nil
}

func (x *FolderConfiguration) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration) ClearLabel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Label = nil
}

func (x *FolderConfiguration) ClearMarkerName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
}

func (x *FolderConfiguration) ClearFilesystem() {
	x.xxx_hidden_Filesystem = nil
}

func (x *FolderConfiguration) ClearFilesystemOptions() {
	x.xxx_hidden_FilesystemOptions = nil
}

func (x *FolderConfiguration) ClearScanning() {
	x.xxx_hidden_Scanning = nil
}

func (x *FolderConfiguration) ClearPulling() {
	x.xxx_hidden_Pulling = nil
}

func (x *FolderConfiguration) ClearVersioning() {
	x.xxx_hidden_Versioning = nil
}

type FolderConfiguration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type              *FolderType
	FolderId          *string
	Enabled           *bool
	Label             *string
	MarkerName        *string
	Filesystem        *FolderConfiguration_Filesystem
	FilesystemOptions *FolderConfiguration_FilesystemOptions
	SharedWith        []*FolderConfiguration_Sharing
	Scanning          *FolderConfiguration_Scanning
	Pulling           *FolderConfiguration_Pulling
	Versioning        *FolderConfiguration_Versioning
}

func (b0 FolderConfiguration_builder) Build() *FolderConfiguration {
	m0 := &FolderConfiguration{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Type = *b.Type
	}
	if b.FolderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_FolderId = b.FolderId
	}
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.Label != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_Label = b.Label
	}
	if b.MarkerName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_MarkerName = b.MarkerName
	}
	x.xxx_hidden_Filesystem = b.Filesystem
	x.xxx_hidden_FilesystemOptions = b.FilesystemOptions
	x.xxx_hidden_SharedWith = &b.SharedWith
	x.xxx_hidden_Scanning = b.Scanning
	x.xxx_hidden_Pulling = b.Pulling
	x.xxx_hidden_Versioning = b.Versioning
	return m0
}

type Size struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Percent     float64                `protobuf:"fixed64,1,opt,name=percent"`
	xxx_hidden_Bytes       int64                  `protobuf:"varint,2,opt,name=bytes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Size) Reset() {
	*x = Size{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Size) GetPercent() float64 {
	if x != nil {
		return x.xxx_hidden_Percent
	}
	return 0
}

func (x *Size) GetBytes() int64 {
	if x != nil {
		return x.xxx_hidden_Bytes
	}
	return 0
}

func (x *Size) SetPercent(v float64) {
	x.xxx_hidden_Percent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Size) SetBytes(v int64) {
	x.xxx_hidden_Bytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Size) HasPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Size) HasBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Size) ClearPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Percent = 0
}

func (x *Size) ClearBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Bytes = 0
}

type Size_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Percent *float64
	Bytes   *int64
}

func (b0 Size_builder) Build() *Size {
	m0 := &Size{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Percent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Percent = *b.Percent
	}
	if b.Bytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Bytes = *b.Bytes
	}
	return m0
}

type XattrFilter struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XattrFilter) Reset() {
	*x = XattrFilter{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XattrFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XattrFilter) ProtoMessage() {}

func (x *XattrFilter) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type XattrFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 XattrFilter_builder) Build() *XattrFilter {
	m0 := &XattrFilter{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type KV struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *string                `protobuf:"bytes,1,opt,name=key"`
	xxx_hidden_Value       *string                `protobuf:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *KV) Reset() {
	*x = KV{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KV) ProtoMessage() {}

func (x *KV) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KV) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *KV) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *KV) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *KV) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *KV) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *KV) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *KV) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Key = nil
}

func (x *KV) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Value = nil
}

type KV_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key   *string
	Value *string
}

func (b0 KV_builder) Build() *KV {
	m0 := &KV{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Key = b.Key
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Value = b.Value
	}
	return m0
}

type FolderConfiguration_Filesystem struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path        *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_Type        FilesystemType         `protobuf:"varint,2,opt,name=type,enum=syncthing.config.v2.FilesystemType,def=1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

// Default values for FolderConfiguration_Filesystem fields.
const (
	Default_FolderConfiguration_Filesystem_Type = FilesystemType_FILESYSTEM_TYPE_BASIC
)

func (x *FolderConfiguration_Filesystem) Reset() {
	*x = FolderConfiguration_Filesystem{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Filesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Filesystem) ProtoMessage() {}

func (x *FolderConfiguration_Filesystem) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Filesystem) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration_Filesystem) GetType() FilesystemType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return Default_FolderConfiguration_Filesystem_Type
}

func (x *FolderConfiguration_Filesystem) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *FolderConfiguration_Filesystem) SetType(v FilesystemType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *FolderConfiguration_Filesystem) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Filesystem) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Filesystem) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *FolderConfiguration_Filesystem) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
}

type FolderConfiguration_Filesystem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Path *string
	Type *FilesystemType
}

func (b0 FolderConfiguration_Filesystem_builder) Build() *FolderConfiguration_Filesystem {
	m0 := &FolderConfiguration_Filesystem{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Path = b.Path
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Type = *b.Type
	}
	return m0
}

type FolderConfiguration_FilesystemOptions struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CaseSensitive   bool                   `protobuf:"varint,1,opt,name=case_sensitive,json=caseSensitive"`
	xxx_hidden_JunctionsAsDirs bool                   `protobuf:"varint,2,opt,name=junctions_as_dirs,json=junctionsAsDirs"`
	xxx_hidden_MinDiskFree     *Size                  `protobuf:"bytes,3,opt,name=min_disk_free,json=minDiskFree"`
	xxx_hidden_AutoNormalize   bool                   `protobuf:"varint,4,opt,name=auto_normalize,json=autoNormalize,def=1"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

// Default values for FolderConfiguration_FilesystemOptions fields.
const (
	Default_FolderConfiguration_FilesystemOptions_AutoNormalize = bool(true)
)

func (x *FolderConfiguration_FilesystemOptions) Reset() {
	*x = FolderConfiguration_FilesystemOptions{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_FilesystemOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_FilesystemOptions) ProtoMessage() {}

func (x *FolderConfiguration_FilesystemOptions) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_FilesystemOptions) GetCaseSensitive() bool {
	if x != nil {
		return x.xxx_hidden_CaseSensitive
	}
	return false
}

func (x *FolderConfiguration_FilesystemOptions) GetJunctionsAsDirs() bool {
	if x != nil {
		return x.xxx_hidden_JunctionsAsDirs
	}
	return false
}

func (x *FolderConfiguration_FilesystemOptions) GetMinDiskFree() *Size {
	if x != nil {
		return x.xxx_hidden_MinDiskFree
	}
	return nil
}

func (x *FolderConfiguration_FilesystemOptions) GetAutoNormalize() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_AutoNormalize
		}
	}
	return Default_FolderConfiguration_FilesystemOptions_AutoNormalize
}

func (x *FolderConfiguration_FilesystemOptions) SetCaseSensitive(v bool) {
	x.xxx_hidden_CaseSensitive = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *FolderConfiguration_FilesystemOptions) SetJunctionsAsDirs(v bool) {
	x.xxx_hidden_JunctionsAsDirs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *FolderConfiguration_FilesystemOptions) SetMinDiskFree(v *Size) {
	x.xxx_hidden_MinDiskFree = v
}

func (x *FolderConfiguration_FilesystemOptions) SetAutoNormalize(v bool) {
	x.xxx_hidden_AutoNormalize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *FolderConfiguration_FilesystemOptions) HasCaseSensitive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_FilesystemOptions) HasJunctionsAsDirs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_FilesystemOptions) HasMinDiskFree() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MinDiskFree != nil
}

func (x *FolderConfiguration_FilesystemOptions) HasAutoNormalize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_FilesystemOptions) ClearCaseSensitive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CaseSensitive = false
}

func (x *FolderConfiguration_FilesystemOptions) ClearJunctionsAsDirs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_JunctionsAsDirs = false
}

func (x *FolderConfiguration_FilesystemOptions) ClearMinDiskFree() {
	x.xxx_hidden_MinDiskFree = nil
}

func (x *FolderConfiguration_FilesystemOptions) ClearAutoNormalize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
}

type FolderConfiguration_FilesystemOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CaseSensitive   *bool
	JunctionsAsDirs *bool
	MinDiskFree     *Size
	AutoNormalize   *bool
}

func (b0 FolderConfiguration_FilesystemOptions_builder) Build() *FolderConfiguration_FilesystemOptions {
	m0 := &FolderConfiguration_FilesystemOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CaseSensitive != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_CaseSensitive = *b.CaseSensitive
	}
	if b.JunctionsAsDirs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_JunctionsAsDirs = *b.JunctionsAsDirs
	}
	x.xxx_hidden_MinDiskFree = b.MinDiskFree
	if b.AutoNormalize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_AutoNormalize = *b.AutoNormalize
	}
	return m0
}

type FolderConfiguration_Sharing struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DeviceId           *string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId"`
	xxx_hidden_IntroducedBy       *string                `protobuf:"bytes,2,opt,name=introduced_by,json=introducedBy"`
	xxx_hidden_EncryptionPassword *string                `protobuf:"bytes,3,opt,name=encryption_password,json=encryptionPassword"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *FolderConfiguration_Sharing) Reset() {
	*x = FolderConfiguration_Sharing{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Sharing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Sharing) ProtoMessage() {}

func (x *FolderConfiguration_Sharing) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Sharing) GetDeviceId() string {
	if x != nil {
		if x.xxx_hidden_DeviceId != nil {
			return *x.xxx_hidden_DeviceId
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration_Sharing) GetIntroducedBy() string {
	if x != nil {
		if x.xxx_hidden_IntroducedBy != nil {
			return *x.xxx_hidden_IntroducedBy
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration_Sharing) GetEncryptionPassword() string {
	if x != nil {
		if x.xxx_hidden_EncryptionPassword != nil {
			return *x.xxx_hidden_EncryptionPassword
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration_Sharing) SetDeviceId(v string) {
	x.xxx_hidden_DeviceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *FolderConfiguration_Sharing) SetIntroducedBy(v string) {
	x.xxx_hidden_IntroducedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *FolderConfiguration_Sharing) SetEncryptionPassword(v string) {
	x.xxx_hidden_EncryptionPassword = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *FolderConfiguration_Sharing) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Sharing) HasIntroducedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Sharing) HasEncryptionPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Sharing) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeviceId = nil
}

func (x *FolderConfiguration_Sharing) ClearIntroducedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IntroducedBy = nil
}

func (x *FolderConfiguration_Sharing) ClearEncryptionPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EncryptionPassword = nil
}

type FolderConfiguration_Sharing_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeviceId           *string
	IntroducedBy       *string
	EncryptionPassword *string
}

func (b0 FolderConfiguration_Sharing_builder) Build() *FolderConfiguration_Sharing {
	m0 := &FolderConfiguration_Sharing{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_DeviceId = b.DeviceId
	}
	if b.IntroducedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_IntroducedBy = b.IntroducedBy
	}
	if b.EncryptionPassword != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_EncryptionPassword = b.EncryptionPassword
	}
	return m0
}

type FolderConfiguration_Scanning struct {
	state                        protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Watcher           *FolderConfiguration_Scanning_Watcher `protobuf:"bytes,1,opt,name=watcher"`
	xxx_hidden_RescanIntervalS   int32                                 `protobuf:"varint,2,opt,name=rescan_interval_s,json=rescanIntervalS,def=3600"`
	xxx_hidden_NumHashers        int32                                 `protobuf:"varint,3,opt,name=num_hashers,json=numHashers"`
	xxx_hidden_ModTimeWindowS    int32                                 `protobuf:"varint,4,opt,name=mod_time_window_s,json=modTimeWindowS"`
	xxx_hidden_ProgressIntervalS int32                                 `protobuf:"varint,5,opt,name=progress_interval_s,json=progressIntervalS"`
	xxx_hidden_ScanOwnership     bool                                  `protobuf:"varint,6,opt,name=scan_ownership,json=scanOwnership"`
	xxx_hidden_ScanXattrs        bool                                  `protobuf:"varint,7,opt,name=scan_xattrs,json=scanXattrs"`
	xxx_hidden_XattrFilter       *XattrFilter                          `protobuf:"bytes,8,opt,name=xattr_filter,json=xattrFilter"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

// Default values for FolderConfiguration_Scanning fields.
const (
	Default_FolderConfiguration_Scanning_RescanIntervalS = int32(3600)
)

func (x *FolderConfiguration_Scanning) Reset() {
	*x = FolderConfiguration_Scanning{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Scanning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Scanning) ProtoMessage() {}

func (x *FolderConfiguration_Scanning) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Scanning) GetWatcher() *FolderConfiguration_Scanning_Watcher {
	if x != nil {
		return x.xxx_hidden_Watcher
	}
	return nil
}

func (x *FolderConfiguration_Scanning) GetRescanIntervalS() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_RescanIntervalS
		}
	}
	return Default_FolderConfiguration_Scanning_RescanIntervalS
}

func (x *FolderConfiguration_Scanning) GetNumHashers() int32 {
	if x != nil {
		return x.xxx_hidden_NumHashers
	}
	return 0
}

func (x *FolderConfiguration_Scanning) GetModTimeWindowS() int32 {
	if x != nil {
		return x.xxx_hidden_ModTimeWindowS
	}
	return 0
}

func (x *FolderConfiguration_Scanning) GetProgressIntervalS() int32 {
	if x != nil {
		return x.xxx_hidden_ProgressIntervalS
	}
	return 0
}

func (x *FolderConfiguration_Scanning) GetScanOwnership() bool {
	if x != nil {
		return x.xxx_hidden_ScanOwnership
	}
	return false
}

func (x *FolderConfiguration_Scanning) GetScanXattrs() bool {
	if x != nil {
		return x.xxx_hidden_ScanXattrs
	}
	return false
}

func (x *FolderConfiguration_Scanning) GetXattrFilter() *XattrFilter {
	if x != nil {
		return x.xxx_hidden_XattrFilter
	}
	return nil
}

func (x *FolderConfiguration_Scanning) SetWatcher(v *FolderConfiguration_Scanning_Watcher) {
	x.xxx_hidden_Watcher = v
}

func (x *FolderConfiguration_Scanning) SetRescanIntervalS(v int32) {
	x.xxx_hidden_RescanIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *FolderConfiguration_Scanning) SetNumHashers(v int32) {
	x.xxx_hidden_NumHashers = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *FolderConfiguration_Scanning) SetModTimeWindowS(v int32) {
	x.xxx_hidden_ModTimeWindowS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *FolderConfiguration_Scanning) SetProgressIntervalS(v int32) {
	x.xxx_hidden_ProgressIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *FolderConfiguration_Scanning) SetScanOwnership(v bool) {
	x.xxx_hidden_ScanOwnership = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *FolderConfiguration_Scanning) SetScanXattrs(v bool) {
	x.xxx_hidden_ScanXattrs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *FolderConfiguration_Scanning) SetXattrFilter(v *XattrFilter) {
	x.xxx_hidden_XattrFilter = v
}

func (x *FolderConfiguration_Scanning) HasWatcher() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Watcher != nil
}

func (x *FolderConfiguration_Scanning) HasRescanIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning) HasNumHashers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Scanning) HasModTimeWindowS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_Scanning) HasProgressIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *FolderConfiguration_Scanning) HasScanOwnership() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *FolderConfiguration_Scanning) HasScanXattrs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *FolderConfiguration_Scanning) HasXattrFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_XattrFilter != nil
}

func (x *FolderConfiguration_Scanning) ClearWatcher() {
	x.xxx_hidden_Watcher = nil
}

func (x *FolderConfiguration_Scanning) ClearRescanIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning) ClearNumHashers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NumHashers = 0
}

func (x *FolderConfiguration_Scanning) ClearModTimeWindowS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ModTimeWindowS = 0
}

func (x *FolderConfiguration_Scanning) ClearProgressIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ProgressIntervalS = 0
}

func (x *FolderConfiguration_Scanning) ClearScanOwnership() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ScanOwnership = false
}

func (x *FolderConfiguration_Scanning) ClearScanXattrs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ScanXattrs = false
}

func (x *FolderConfiguration_Scanning) ClearXattrFilter() {
	x.xxx_hidden_XattrFilter = nil
}

type FolderConfiguration_Scanning_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Watcher           *FolderConfiguration_Scanning_Watcher
	RescanIntervalS   *int32
	NumHashers        *int32
	ModTimeWindowS    *int32
	ProgressIntervalS *int32
	ScanOwnership     *bool
	ScanXattrs        *bool
	XattrFilter       *XattrFilter
}

func (b0 FolderConfiguration_Scanning_builder) Build() *FolderConfiguration_Scanning {
	m0 := &FolderConfiguration_Scanning{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Watcher = b.Watcher
	if b.RescanIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_RescanIntervalS = *b.RescanIntervalS
	}
	if b.NumHashers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_NumHashers = *b.NumHashers
	}
	if b.ModTimeWindowS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_ModTimeWindowS = *b.ModTimeWindowS
	}
	if b.ProgressIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_ProgressIntervalS = *b.ProgressIntervalS
	}
	if b.ScanOwnership != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_ScanOwnership = *b.ScanOwnership
	}
	if b.ScanXattrs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ScanXattrs = *b.ScanXattrs
	}
	x.xxx_hidden_XattrFilter = b.XattrFilter
	return m0
}

type FolderConfiguration_Pulling struct {
	state                              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Order                   PullOrder              `protobuf:"varint,1,opt,name=order,enum=syncthing.config.v2.PullOrder,def=1"`
	xxx_hidden_BlockOrder              BlockPullOrder         `protobuf:"varint,2,opt,name=block_order,json=blockOrder,enum=syncthing.config.v2.BlockPullOrder,def=1"`
	xxx_hidden_NumCopiers              int32                  `protobuf:"varint,3,opt,name=num_copiers,json=numCopiers,def=2"`
	xxx_hidden_MaxPendingKib           int32                  `protobuf:"varint,4,opt,name=max_pending_kib,json=maxPendingKib,def=32768"`
	xxx_hidden_MaxConflicts            int32                  `protobuf:"varint,5,opt,name=max_conflicts,json=maxConflicts,def=10"`
	xxx_hidden_MaxConcurrentWrites     int32                  `protobuf:"varint,6,opt,name=max_concurrent_writes,json=maxConcurrentWrites,def=2"`
	xxx_hidden_FailedPauseS            int32                  `protobuf:"varint,7,opt,name=failed_pause_s,json=failedPauseS,def=60"`
	xxx_hidden_ChangeDelayS            float64                `protobuf:"fixed64,8,opt,name=change_delay_s,json=changeDelayS,def=1"`
	xxx_hidden_SparseFiles             bool                   `protobuf:"varint,9,opt,name=sparse_files,json=sparseFiles,def=1"`
	xxx_hidden_IgnorePermissions       bool                   `protobuf:"varint,10,opt,name=ignore_permissions,json=ignorePermissions"`
	xxx_hidden_TemporaryIndexes        bool                   `protobuf:"varint,11,opt,name=temporary_indexes,json=temporaryIndexes,def=1"`
	xxx_hidden_Fsync                   bool                   `protobuf:"varint,12,opt,name=fsync,def=1"`
	xxx_hidden_CopyRangeMethod         CopyRangeMethod        `protobuf:"varint,13,opt,name=copy_range_method,json=copyRangeMethod,enum=syncthing.config.v2.CopyRangeMethod,def=1"`
	xxx_hidden_SyncOwnership           bool                   `protobuf:"varint,14,opt,name=sync_ownership,json=syncOwnership"`
	xxx_hidden_SyncXattrs              bool                   `protobuf:"varint,15,opt,name=sync_xattrs,json=syncXattrs"`
	xxx_hidden_IgnoreDelete            bool                   `protobuf:"varint,16,opt,name=ignore_delete,json=ignoreDelete"`
	xxx_hidden_CopyOwnershipFromParent bool                   `protobuf:"varint,17,opt,name=copy_ownership_from_parent,json=copyOwnershipFromParent"`
	XXX_raceDetectHookData             protoimpl.RaceDetectHookData
	XXX_presence                       [1]uint32
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

// Default values for FolderConfiguration_Pulling fields.
const (
	Default_FolderConfiguration_Pulling_Order               = PullOrder_PULL_ORDER_RANDOM
	Default_FolderConfiguration_Pulling_BlockOrder          = BlockPullOrder_BLOCK_PULL_ORDER_STANDARD
	Default_FolderConfiguration_Pulling_NumCopiers          = int32(2)
	Default_FolderConfiguration_Pulling_MaxPendingKib       = int32(32768)
	Default_FolderConfiguration_Pulling_MaxConflicts        = int32(10)
	Default_FolderConfiguration_Pulling_MaxConcurrentWrites = int32(2)
	Default_FolderConfiguration_Pulling_FailedPauseS        = int32(60)
	Default_FolderConfiguration_Pulling_ChangeDelayS        = float64(1)
	Default_FolderConfiguration_Pulling_SparseFiles         = bool(true)
	Default_FolderConfiguration_Pulling_TemporaryIndexes    = bool(true)
	Default_FolderConfiguration_Pulling_Fsync               = bool(true)
	Default_FolderConfiguration_Pulling_CopyRangeMethod     = CopyRangeMethod_COPY_RANGE_METHOD_STANDARD
)

func (x *FolderConfiguration_Pulling) Reset() {
	*x = FolderConfiguration_Pulling{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Pulling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Pulling) ProtoMessage() {}

func (x *FolderConfiguration_Pulling) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Pulling) GetOrder() PullOrder {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Order
		}
	}
	return Default_FolderConfiguration_Pulling_Order
}

func (x *FolderConfiguration_Pulling) GetBlockOrder() BlockPullOrder {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_BlockOrder
		}
	}
	return Default_FolderConfiguration_Pulling_BlockOrder
}

func (x *FolderConfiguration_Pulling) GetNumCopiers() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_NumCopiers
		}
	}
	return Default_FolderConfiguration_Pulling_NumCopiers
}

func (x *FolderConfiguration_Pulling) GetMaxPendingKib() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_MaxPendingKib
		}
	}
	return Default_FolderConfiguration_Pulling_MaxPendingKib
}

func (x *FolderConfiguration_Pulling) GetMaxConflicts() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_MaxConflicts
		}
	}
	return Default_FolderConfiguration_Pulling_MaxConflicts
}

func (x *FolderConfiguration_Pulling) GetMaxConcurrentWrites() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_MaxConcurrentWrites
		}
	}
	return Default_FolderConfiguration_Pulling_MaxConcurrentWrites
}

func (x *FolderConfiguration_Pulling) GetFailedPauseS() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_FailedPauseS
		}
	}
	return Default_FolderConfiguration_Pulling_FailedPauseS
}

func (x *FolderConfiguration_Pulling) GetChangeDelayS() float64 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			return x.xxx_hidden_ChangeDelayS
		}
	}
	return Default_FolderConfiguration_Pulling_ChangeDelayS
}

func (x *FolderConfiguration_Pulling) GetSparseFiles() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_SparseFiles
		}
	}
	return Default_FolderConfiguration_Pulling_SparseFiles
}

func (x *FolderConfiguration_Pulling) GetIgnorePermissions() bool {
	if x != nil {
		return x.xxx_hidden_IgnorePermissions
	}
	return false
}

func (x *FolderConfiguration_Pulling) GetTemporaryIndexes() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 10) {
			return x.xxx_hidden_TemporaryIndexes
		}
	}
	return Default_FolderConfiguration_Pulling_TemporaryIndexes
}

func (x *FolderConfiguration_Pulling) GetFsync() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 11) {
			return x.xxx_hidden_Fsync
		}
	}
	return Default_FolderConfiguration_Pulling_Fsync
}

func (x *FolderConfiguration_Pulling) GetCopyRangeMethod() CopyRangeMethod {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 12) {
			return x.xxx_hidden_CopyRangeMethod
		}
	}
	return Default_FolderConfiguration_Pulling_CopyRangeMethod
}

func (x *FolderConfiguration_Pulling) GetSyncOwnership() bool {
	if x != nil {
		return x.xxx_hidden_SyncOwnership
	}
	return false
}

func (x *FolderConfiguration_Pulling) GetSyncXattrs() bool {
	if x != nil {
		return x.xxx_hidden_SyncXattrs
	}
	return false
}

func (x *FolderConfiguration_Pulling) GetIgnoreDelete() bool {
	if x != nil {
		return x.xxx_hidden_IgnoreDelete
	}
	return false
}

func (x *FolderConfiguration_Pulling) GetCopyOwnershipFromParent() bool {
	if x != nil {
		return x.xxx_hidden_CopyOwnershipFromParent
	}
	return false
}

func (x *FolderConfiguration_Pulling) SetOrder(v PullOrder) {
	x.xxx_hidden_Order = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 17)
}

func (x *FolderConfiguration_Pulling) SetBlockOrder(v BlockPullOrder) {
	x.xxx_hidden_BlockOrder = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 17)
}

func (x *FolderConfiguration_Pulling) SetNumCopiers(v int32) {
	x.xxx_hidden_NumCopiers = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 17)
}

func (x *FolderConfiguration_Pulling) SetMaxPendingKib(v int32) {
	x.xxx_hidden_MaxPendingKib = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 17)
}

func (x *FolderConfiguration_Pulling) SetMaxConflicts(v int32) {
	x.xxx_hidden_MaxConflicts = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 17)
}

func (x *FolderConfiguration_Pulling) SetMaxConcurrentWrites(v int32) {
	x.xxx_hidden_MaxConcurrentWrites = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 17)
}

func (x *FolderConfiguration_Pulling) SetFailedPauseS(v int32) {
	x.xxx_hidden_FailedPauseS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 17)
}

func (x *FolderConfiguration_Pulling) SetChangeDelayS(v float64) {
	x.xxx_hidden_ChangeDelayS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 17)
}

func (x *FolderConfiguration_Pulling) SetSparseFiles(v bool) {
	x.xxx_hidden_SparseFiles = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 17)
}

func (x *FolderConfiguration_Pulling) SetIgnorePermissions(v bool) {
	x.xxx_hidden_IgnorePermissions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 17)
}

func (x *FolderConfiguration_Pulling) SetTemporaryIndexes(v bool) {
	x.xxx_hidden_TemporaryIndexes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 17)
}

func (x *FolderConfiguration_Pulling) SetFsync(v bool) {
	x.xxx_hidden_Fsync = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 17)
}

func (x *FolderConfiguration_Pulling) SetCopyRangeMethod(v CopyRangeMethod) {
	x.xxx_hidden_CopyRangeMethod = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 17)
}

func (x *FolderConfiguration_Pulling) SetSyncOwnership(v bool) {
	x.xxx_hidden_SyncOwnership = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 17)
}

func (x *FolderConfiguration_Pulling) SetSyncXattrs(v bool) {
	x.xxx_hidden_SyncXattrs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 17)
}

func (x *FolderConfiguration_Pulling) SetIgnoreDelete(v bool) {
	x.xxx_hidden_IgnoreDelete = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 17)
}

func (x *FolderConfiguration_Pulling) SetCopyOwnershipFromParent(v bool) {
	x.xxx_hidden_CopyOwnershipFromParent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 17)
}

func (x *FolderConfiguration_Pulling) HasOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Pulling) HasBlockOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Pulling) HasNumCopiers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Pulling) HasMaxPendingKib() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_Pulling) HasMaxConflicts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *FolderConfiguration_Pulling) HasMaxConcurrentWrites() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *FolderConfiguration_Pulling) HasFailedPauseS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *FolderConfiguration_Pulling) HasChangeDelayS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *FolderConfiguration_Pulling) HasSparseFiles() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *FolderConfiguration_Pulling) HasIgnorePermissions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *FolderConfiguration_Pulling) HasTemporaryIndexes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *FolderConfiguration_Pulling) HasFsync() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *FolderConfiguration_Pulling) HasCopyRangeMethod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *FolderConfiguration_Pulling) HasSyncOwnership() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *FolderConfiguration_Pulling) HasSyncXattrs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *FolderConfiguration_Pulling) HasIgnoreDelete() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *FolderConfiguration_Pulling) HasCopyOwnershipFromParent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *FolderConfiguration_Pulling) ClearOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Pulling) ClearBlockOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Pulling) ClearNumCopiers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Pulling) ClearMaxPendingKib() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_Pulling) ClearMaxConflicts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
}

func (x *FolderConfiguration_Pulling) ClearMaxConcurrentWrites() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
}

func (x *FolderConfiguration_Pulling) ClearFailedPauseS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
}

func (x *FolderConfiguration_Pulling) ClearChangeDelayS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
}

func (x *FolderConfiguration_Pulling) ClearSparseFiles() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
}

func (x *FolderConfiguration_Pulling) ClearIgnorePermissions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_IgnorePermissions = false
}

func (x *FolderConfiguration_Pulling) ClearTemporaryIndexes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
}

func (x *FolderConfiguration_Pulling) ClearFsync() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
}

func (x *FolderConfiguration_Pulling) ClearCopyRangeMethod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
}

func (x *FolderConfiguration_Pulling) ClearSyncOwnership() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_SyncOwnership = false
}

func (x *FolderConfiguration_Pulling) ClearSyncXattrs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_SyncXattrs = false
}

func (x *FolderConfiguration_Pulling) ClearIgnoreDelete() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_IgnoreDelete = false
}

func (x *FolderConfiguration_Pulling) ClearCopyOwnershipFromParent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_CopyOwnershipFromParent = false
}

type FolderConfiguration_Pulling_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Order                   *PullOrder
	BlockOrder              *BlockPullOrder
	NumCopiers              *int32
	MaxPendingKib           *int32
	MaxConflicts            *int32
	MaxConcurrentWrites     *int32
	FailedPauseS            *int32
	ChangeDelayS            *float64
	SparseFiles             *bool
	IgnorePermissions       *bool
	TemporaryIndexes        *bool
	Fsync                   *bool
	CopyRangeMethod         *CopyRangeMethod
	SyncOwnership           *bool
	SyncXattrs              *bool
	IgnoreDelete            *bool
	CopyOwnershipFromParent *bool
}

func (b0 FolderConfiguration_Pulling_builder) Build() *FolderConfiguration_Pulling {
	m0 := &FolderConfiguration_Pulling{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Order != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 17)
		x.xxx_hidden_Order = *b.Order
	}
	if b.BlockOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 17)
		x.xxx_hidden_BlockOrder = *b.BlockOrder
	}
	if b.NumCopiers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 17)
		x.xxx_hidden_NumCopiers = *b.NumCopiers
	}
	if b.MaxPendingKib != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 17)
		x.xxx_hidden_MaxPendingKib = *b.MaxPendingKib
	}
	if b.MaxConflicts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 17)
		x.xxx_hidden_MaxConflicts = *b.MaxConflicts
	}
	if b.MaxConcurrentWrites != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 17)
		x.xxx_hidden_MaxConcurrentWrites = *b.MaxConcurrentWrites
	}
	if b.FailedPauseS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 17)
		x.xxx_hidden_FailedPauseS = *b.FailedPauseS
	}
	if b.ChangeDelayS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 17)
		x.xxx_hidden_ChangeDelayS = *b.ChangeDelayS
	}
	if b.SparseFiles != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 17)
		x.xxx_hidden_SparseFiles = *b.SparseFiles
	}
	if b.IgnorePermissions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 17)
		x.xxx_hidden_IgnorePermissions = *b.IgnorePermissions
	}
	if b.TemporaryIndexes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 17)
		x.xxx_hidden_TemporaryIndexes = *b.TemporaryIndexes
	}
	if b.Fsync != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 17)
		x.xxx_hidden_Fsync = *b.Fsync
	}
	if b.CopyRangeMethod != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 17)
		x.xxx_hidden_CopyRangeMethod = *b.CopyRangeMethod
	}
	if b.SyncOwnership != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 17)
		x.xxx_hidden_SyncOwnership = *b.SyncOwnership
	}
	if b.SyncXattrs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 17)
		x.xxx_hidden_SyncXattrs = *b.SyncXattrs
	}
	if b.IgnoreDelete != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 17)
		x.xxx_hidden_IgnoreDelete = *b.IgnoreDelete
	}
	if b.CopyOwnershipFromParent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 17)
		x.xxx_hidden_CopyOwnershipFromParent = *b.CopyOwnershipFromParent
	}
	return m0
}

type FolderConfiguration_Versioning struct {
	state                       protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Type             VersioningType                  `protobuf:"varint,1,opt,name=type,enum=syncthing.config.v2.VersioningType"`
	xxx_hidden_Filesystem       *FolderConfiguration_Filesystem `protobuf:"bytes,2,opt,name=filesystem"`
	xxx_hidden_CleanupIntervalS int32                           `protobuf:"varint,3,opt,name=cleanup_interval_s,json=cleanupIntervalS,def=3600"`
	xxx_hidden_Params           *[]*KV                          `protobuf:"bytes,4,rep,name=params"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

// Default values for FolderConfiguration_Versioning fields.
const (
	Default_FolderConfiguration_Versioning_CleanupIntervalS = int32(3600)
)

func (x *FolderConfiguration_Versioning) Reset() {
	*x = FolderConfiguration_Versioning{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Versioning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Versioning) ProtoMessage() {}

func (x *FolderConfiguration_Versioning) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Versioning) GetType() VersioningType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return VersioningType_VERSIONING_TYPE_UNSPECIFIED
}

func (x *FolderConfiguration_Versioning) GetFilesystem() *FolderConfiguration_Filesystem {
	if x != nil {
		return x.xxx_hidden_Filesystem
	}
	return nil
}

func (x *FolderConfiguration_Versioning) GetCleanupIntervalS() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_CleanupIntervalS
		}
	}
	return Default_FolderConfiguration_Versioning_CleanupIntervalS
}

func (x *FolderConfiguration_Versioning) GetParams() []*KV {
	if x != nil {
		if x.xxx_hidden_Params != nil {
			return *x.xxx_hidden_Params
		}
	}
	return nil
}

func (x *FolderConfiguration_Versioning) SetType(v VersioningType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *FolderConfiguration_Versioning) SetFilesystem(v *FolderConfiguration_Filesystem) {
	x.xxx_hidden_Filesystem = v
}

func (x *FolderConfiguration_Versioning) SetCleanupIntervalS(v int32) {
	x.xxx_hidden_CleanupIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *FolderConfiguration_Versioning) SetParams(v []*KV) {
	x.xxx_hidden_Params = &v
}

func (x *FolderConfiguration_Versioning) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Versioning) HasFilesystem() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filesystem != nil
}

func (x *FolderConfiguration_Versioning) HasCleanupIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Versioning) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = VersioningType_VERSIONING_TYPE_UNSPECIFIED
}

func (x *FolderConfiguration_Versioning) ClearFilesystem() {
	x.xxx_hidden_Filesystem = nil
}

func (x *FolderConfiguration_Versioning) ClearCleanupIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
}

type FolderConfiguration_Versioning_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type             *VersioningType
	Filesystem       *FolderConfiguration_Filesystem
	CleanupIntervalS *int32
	Params           []*KV
}

func (b0 FolderConfiguration_Versioning_builder) Build() *FolderConfiguration_Versioning {
	m0 := &FolderConfiguration_Versioning{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Filesystem = b.Filesystem
	if b.CleanupIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CleanupIntervalS = *b.CleanupIntervalS
	}
	x.xxx_hidden_Params = &b.Params
	return m0
}

type FolderConfiguration_Scanning_Watcher struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,1,opt,name=enabled,def=1"`
	xxx_hidden_DelayS      float64                `protobuf:"fixed64,2,opt,name=delay_s,json=delayS,def=10"`
	xxx_hidden_TimeoutS    float64                `protobuf:"fixed64,3,opt,name=timeout_s,json=timeoutS"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

// Default values for FolderConfiguration_Scanning_Watcher fields.
const (
	Default_FolderConfiguration_Scanning_Watcher_Enabled = bool(true)
	Default_FolderConfiguration_Scanning_Watcher_DelayS  = float64(10)
)

func (x *FolderConfiguration_Scanning_Watcher) Reset() {
	*x = FolderConfiguration_Scanning_Watcher{}
	mi := &file_config_v2_folder_configuration_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Scanning_Watcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Scanning_Watcher) ProtoMessage() {}

func (x *FolderConfiguration_Scanning_Watcher) ProtoReflect() protoreflect.Message {
	mi := &file_config_v2_folder_configuration_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Scanning_Watcher) GetEnabled() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Enabled
		}
	}
	return Default_FolderConfiguration_Scanning_Watcher_Enabled
}

func (x *FolderConfiguration_Scanning_Watcher) GetDelayS() float64 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_DelayS
		}
	}
	return Default_FolderConfiguration_Scanning_Watcher_DelayS
}

func (x *FolderConfiguration_Scanning_Watcher) GetTimeoutS() float64 {
	if x != nil {
		return x.xxx_hidden_TimeoutS
	}
	return 0
}

func (x *FolderConfiguration_Scanning_Watcher) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *FolderConfiguration_Scanning_Watcher) SetDelayS(v float64) {
	x.xxx_hidden_DelayS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *FolderConfiguration_Scanning_Watcher) SetTimeoutS(v float64) {
	x.xxx_hidden_TimeoutS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *FolderConfiguration_Scanning_Watcher) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Scanning_Watcher) HasDelayS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning_Watcher) HasTimeoutS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Scanning_Watcher) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Scanning_Watcher) ClearDelayS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning_Watcher) ClearTimeoutS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TimeoutS = 0
}

type FolderConfiguration_Scanning_Watcher_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enabled  *bool
	DelayS   *float64
	TimeoutS *float64
}

func (b0 FolderConfiguration_Scanning_Watcher_builder) Build() *FolderConfiguration_Scanning_Watcher {
	m0 := &FolderConfiguration_Scanning_Watcher{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.DelayS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_DelayS = *b.DelayS
	}
	if b.TimeoutS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TimeoutS = *b.TimeoutS
	}
	return m0
}

var File_config_v2_folder_configuration_proto protoreflect.FileDescriptor

const file_config_v2_folder_configuration_proto_rawDesc = "" +
	"\n" +
	"$config/v2/folder_configuration.proto\x12\x13syncthing.config.v2\x1a!google/protobuf/go_features.proto\"\xaa\x16\n" +
	"\x13FolderConfiguration\x12M\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1f.syncthing.config.v2.FolderType:\x18FOLDER_TYPE_SEND_RECEIVER\x04type\x12\x1b\n" +
	"\tfolder_id\x18\x02 \x01(\tR\bfolderId\x12\x1e\n" +
	"\aenabled\x18\x03 \x01(\b:\x04trueR\aenabled\x12\x14\n" +
	"\x05label\x18\x04 \x01(\tR\x05label\x12*\n" +
	"\vmarker_name\x18\x05 \x01(\t:\t.stfolderR\n" +
	"markerName\x12S\n" +
	"\n" +
	"filesystem\x18\x06 \x01(\v23.syncthing.config.v2.FolderConfiguration.FilesystemR\n" +
	"filesystem\x12i\n" +
	"\x12filesystem_options\x18\a \x01(\v2:.syncthing.config.v2.FolderConfiguration.FilesystemOptionsR\x11filesystemOptions\x12Q\n" +
	"\vshared_with\x18\b \x03(\v20.syncthing.config.v2.FolderConfiguration.SharingR\n" +
	"sharedWith\x12M\n" +
	"\bscanning\x18\t \x01(\v21.syncthing.config.v2.FolderConfiguration.ScanningR\bscanning\x12J\n" +
	"\apulling\x18\n" +
	" \x01(\v20.syncthing.config.v2.FolderConfiguration.PullingR\apulling\x12S\n" +
	"\n" +
	"versioning\x18\v \x01(\v23.syncthing.config.v2.FolderConfiguration.VersioningR\n" +
	"versioning\x1ap\n" +
	"\n" +
	"Filesystem\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12N\n" +
	"\x04type\x18\x02 \x01(\x0e2#.syncthing.config.v2.FilesystemType:\x15FILESYSTEM_TYPE_BASICR\x04type\x1a\xd2\x01\n" +
	"\x11FilesystemOptions\x12%\n" +
	"\x0ecase_sensitive\x18\x01 \x01(\bR\rcaseSensitive\x12*\n" +
	"\x11junctions_as_dirs\x18\x02 \x01(\bR\x0fjunctionsAsDirs\x12=\n" +
	"\rmin_disk_free\x18\x03 \x01(\v2\x19.syncthing.config.v2.SizeR\vminDiskFree\x12+\n" +
	"\x0eauto_normalize\x18\x04 \x01(\b:\x04trueR\rautoNormalize\x1a|\n" +
	"\aSharing\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12#\n" +
	"\rintroduced_by\x18\x02 \x01(\tR\fintroducedBy\x12/\n" +
	"\x13encryption_password\x18\x03 \x01(\tR\x12encryptionPassword\x1a\xff\x03\n" +
	"\bScanning\x12S\n" +
	"\awatcher\x18\x01 \x01(\v29.syncthing.config.v2.FolderConfiguration.Scanning.WatcherR\awatcher\x120\n" +
	"\x11rescan_interval_s\x18\x02 \x01(\x05:\x043600R\x0frescanIntervalS\x12\x1f\n" +
	"\vnum_hashers\x18\x03 \x01(\x05R\n" +
	"numHashers\x12)\n" +
	"\x11mod_time_window_s\x18\x04 \x01(\x05R\x0emodTimeWindowS\x12.\n" +
	"\x13progress_interval_s\x18\x05 \x01(\x05R\x11progressIntervalS\x12%\n" +
	"\x0escan_ownership\x18\x06 \x01(\bR\rscanOwnership\x12\x1f\n" +
	"\vscan_xattrs\x18\a \x01(\bR\n" +
	"scanXattrs\x12C\n" +
	"\fxattr_filter\x18\b \x01(\v2 .syncthing.config.v2.XattrFilterR\vxattrFilter\x1ac\n" +
	"\aWatcher\x12\x1e\n" +
	"\aenabled\x18\x01 \x01(\b:\x04trueR\aenabled\x12\x1b\n" +
	"\adelay_s\x18\x02 \x01(\x01:\x0210R\x06delayS\x12\x1b\n" +
	"\ttimeout_s\x18\x03 \x01(\x01R\btimeoutS\x1a\xf8\x06\n" +
	"\aPulling\x12G\n" +
	"\x05order\x18\x01 \x01(\x0e2\x1e.syncthing.config.v2.PullOrder:\x11PULL_ORDER_RANDOMR\x05order\x12_\n" +
	"\vblock_order\x18\x02 \x01(\x0e2#.syncthing.config.v2.BlockPullOrder:\x19BLOCK_PULL_ORDER_STANDARDR\n" +
	"blockOrder\x12\"\n" +
	"\vnum_copiers\x18\x03 \x01(\x05:\x012R\n" +
	"numCopiers\x12-\n" +
	"\x0fmax_pending_kib\x18\x04 \x01(\x05:\x0532768R\rmaxPendingKib\x12'\n" +
	"\rmax_conflicts\x18\x05 \x01(\x05:\x0210R\fmaxConflicts\x125\n" +
	"\x15max_concurrent_writes\x18\x06 \x01(\x05:\x012R\x13maxConcurrentWrites\x12(\n" +
	"\x0efailed_pause_s\x18\a \x01(\x05:\x0260R\ffailedPauseS\x12'\n" +
	"\x0echange_delay_s\x18\b \x01(\x01:\x011R\fchangeDelayS\x12'\n" +
	"\fsparse_files\x18\t \x01(\b:\x04trueR\vsparseFiles\x12-\n" +
	"\x12ignore_permissions\x18\n" +
	" \x01(\bR\x11ignorePermissions\x121\n" +
	"\x11temporary_indexes\x18\v \x01(\b:\x04trueR\x10temporaryIndexes\x12\x1a\n" +
	"\x05fsync\x18\f \x01(\b:\x04trueR\x05fsync\x12l\n" +
	"\x11copy_range_method\x18\r \x01(\x0e2$.syncthing.config.v2.CopyRangeMethod:\x1aCOPY_RANGE_METHOD_STANDARDR\x0fcopyRangeMethod\x12%\n" +
	"\x0esync_ownership\x18\x0e \x01(\bR\rsyncOwnership\x12\x1f\n" +
	"\vsync_xattrs\x18\x0f \x01(\bR\n" +
	"syncXattrs\x12#\n" +
	"\rignore_delete\x18\x10 \x01(\bR\fignoreDelete\x12;\n" +
	"\x1acopy_ownership_from_parent\x18\x11 \x01(\bR\x17copyOwnershipFromParent\x1a\xff\x01\n" +
	"\n" +
	"Versioning\x127\n" +
	"\x04type\x18\x01 \x01(\x0e2#.syncthing.config.v2.VersioningTypeR\x04type\x12S\n" +
	"\n" +
	"filesystem\x18\x02 \x01(\v23.syncthing.config.v2.FolderConfiguration.FilesystemR\n" +
	"filesystem\x122\n" +
	"\x12cleanup_interval_s\x18\x03 \x01(\x05:\x043600R\x10cleanupIntervalS\x12/\n" +
	"\x06params\x18\x04 \x03(\v2\x17.syncthing.config.v2.KVR\x06params\"6\n" +
	"\x04Size\x12\x18\n" +
	"\apercent\x18\x01 \x01(\x01R\apercent\x12\x14\n" +
	"\x05bytes\x18\x02 \x01(\x03R\x05bytes\"\r\n" +
	"\vXattrFilter\",\n" +
	"\x02KV\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value*\xa3\x01\n" +
	"\n" +
	"FolderType\x12\x1b\n" +
	"\x17FOLDER_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18FOLDER_TYPE_SEND_RECEIVE\x10\x01\x12\x19\n" +
	"\x15FOLDER_TYPE_SEND_ONLY\x10\x02\x12\x1c\n" +
	"\x18FOLDER_TYPE_RECEIVE_ONLY\x10\x03\x12!\n" +
	"\x1dFOLDER_TYPE_RECEIVE_ENCRYPTED\x10\x04*f\n" +
	"\x0eFilesystemType\x12\x1f\n" +
	"\x1bFILESYSTEM_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15FILESYSTEM_TYPE_BASIC\x10\x01\x12\x18\n" +
	"\x14FILESYSTEM_TYPE_FAKE\x10\x02*\xd0\x01\n" +
	"\tPullOrder\x12\x1a\n" +
	"\x16PULL_ORDER_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11PULL_ORDER_RANDOM\x10\x01\x12\x19\n" +
	"\x15PULL_ORDER_ALPHABETIC\x10\x02\x12\x1d\n" +
	"\x19PULL_ORDER_SMALLEST_FIRST\x10\x03\x12\x1c\n" +
	"\x18PULL_ORDER_LARGEST_FIRST\x10\x04\x12\x1b\n" +
	"\x17PULL_ORDER_OLDEST_FIRST\x10\x05\x12\x1b\n" +
	"\x17PULL_ORDER_NEWEST_FIRST\x10\x06*\x8d\x01\n" +
	"\x0eBlockPullOrder\x12 \n" +
	"\x1cBLOCK_PULL_ORDER_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19BLOCK_PULL_ORDER_STANDARD\x10\x01\x12\x1b\n" +
	"\x17BLOCK_PULL_ORDER_RANDOM\x10\x02\x12\x1d\n" +
	"\x19BLOCK_PULL_ORDER_IN_ORDER\x10\x03*\x8b\x02\n" +
	"\x0fCopyRangeMethod\x12!\n" +
	"\x1dCOPY_RANGE_METHOD_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCOPY_RANGE_METHOD_STANDARD\x10\x01\x12\x1b\n" +
	"\x17COPY_RANGE_METHOD_IOCTL\x10\x02\x12%\n" +
	"!COPY_RANGE_METHOD_COPY_FILE_RANGE\x10\x03\x12\x1f\n" +
	"\x1bCOPY_RANGE_METHOD_SEND_FILE\x10\x04\x12'\n" +
	"#COPY_RANGE_METHOD_DUPLICATE_EXTENTS\x10\x05\x12'\n" +
	"#COPY_RANGE_METHOD_ALL_WITH_FALLBACK\x10\x06*\xa8\x01\n" +
	"\x0eVersioningType\x12\x1f\n" +
	"\x1bVERSIONING_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18VERSIONING_TYPE_TRASHCAN\x10\x01\x12\x1a\n" +
	"\x16VERSIONING_TYPE_SIMPLE\x10\x02\x12\x1d\n" +
	"\x19VERSIONING_TYPE_STAGGERED\x10\x03\x12\x1c\n" +
	"\x18VERSIONING_TYPE_EXTERNAL\x10\x04B\xe5\x01\n" +
	"\x17com.syncthing.config.v2B\x18FolderConfigurationProtoP\x01Z:github.com/syncthing/syncthing/internal/config/v2;configv2\xa2\x02\x03SCX\xaa\x02\x13Syncthing.Config.V2\xca\x02\x13Syncthing\\Config\\V2\xe2\x02\x1fSyncthing\\Config\\V2\\GPBMetadata\xea\x02\x15Syncthing::Config::V2\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_config_v2_folder_configuration_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_config_v2_folder_configuration_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_config_v2_folder_configuration_proto_goTypes = []any{
	(FolderType)(0),                               // 0: syncthing.config.v2.FolderType
	(FilesystemType)(0),                           // 1: syncthing.config.v2.FilesystemType
	(PullOrder)(0),                                // 2: syncthing.config.v2.PullOrder
	(BlockPullOrder)(0),                           // 3: syncthing.config.v2.BlockPullOrder
	(CopyRangeMethod)(0),                          // 4: syncthing.config.v2.CopyRangeMethod
	(VersioningType)(0),                           // 5: syncthing.config.v2.VersioningType
	(*FolderConfiguration)(nil),                   // 6: syncthing.config.v2.FolderConfiguration
	(*Size)(nil),                                  // 7: syncthing.config.v2.Size
	(*XattrFilter)(nil),                           // 8: syncthing.config.v2.XattrFilter
	(*KV)(nil),                                    // 9: syncthing.config.v2.KV
	(*FolderConfiguration_Filesystem)(nil),        // 10: syncthing.config.v2.FolderConfiguration.Filesystem
	(*FolderConfiguration_FilesystemOptions)(nil), // 11: syncthing.config.v2.FolderConfiguration.FilesystemOptions
	(*FolderConfiguration_Sharing)(nil),           // 12: syncthing.config.v2.FolderConfiguration.Sharing
	(*FolderConfiguration_Scanning)(nil),          // 13: syncthing.config.v2.FolderConfiguration.Scanning
	(*FolderConfiguration_Pulling)(nil),           // 14: syncthing.config.v2.FolderConfiguration.Pulling
	(*FolderConfiguration_Versioning)(nil),        // 15: syncthing.config.v2.FolderConfiguration.Versioning
	(*FolderConfiguration_Scanning_Watcher)(nil),  // 16: syncthing.config.v2.FolderConfiguration.Scanning.Watcher
}
var file_config_v2_folder_configuration_proto_depIdxs = []int32{
	0,  // 0: syncthing.config.v2.FolderConfiguration.type:type_name -> syncthing.config.v2.FolderType
	10, // 1: syncthing.config.v2.FolderConfiguration.filesystem:type_name -> syncthing.config.v2.FolderConfiguration.Filesystem
	11, // 2: syncthing.config.v2.FolderConfiguration.filesystem_options:type_name -> syncthing.config.v2.FolderConfiguration.FilesystemOptions
	12, // 3: syncthing.config.v2.FolderConfiguration.shared_with:type_name -> syncthing.config.v2.FolderConfiguration.Sharing
	13, // 4: syncthing.config.v2.FolderConfiguration.scanning:type_name -> syncthing.config.v2.FolderConfiguration.Scanning
	14, // 5: syncthing.config.v2.FolderConfiguration.pulling:type_name -> syncthing.config.v2.FolderConfiguration.Pulling
	15, // 6: syncthing.config.v2.FolderConfiguration.versioning:type_name -> syncthing.config.v2.FolderConfiguration.Versioning
	1,  // 7: syncthing.config.v2.FolderConfiguration.Filesystem.type:type_name -> syncthing.config.v2.FilesystemType
	7,  // 8: syncthing.config.v2.FolderConfiguration.FilesystemOptions.min_disk_free:type_name -> syncthing.config.v2.Size
	16, // 9: syncthing.config.v2.FolderConfiguration.Scanning.watcher:type_name -> syncthing.config.v2.FolderConfiguration.Scanning.Watcher
	8,  // 10: syncthing.config.v2.FolderConfiguration.Scanning.xattr_filter:type_name -> syncthing.config.v2.XattrFilter
	2,  // 11: syncthing.config.v2.FolderConfiguration.Pulling.order:type_name -> syncthing.config.v2.PullOrder
	3,  // 12: syncthing.config.v2.FolderConfiguration.Pulling.block_order:type_name -> syncthing.config.v2.BlockPullOrder
	4,  // 13: syncthing.config.v2.FolderConfiguration.Pulling.copy_range_method:type_name -> syncthing.config.v2.CopyRangeMethod
	5,  // 14: syncthing.config.v2.FolderConfiguration.Versioning.type:type_name -> syncthing.config.v2.VersioningType
	10, // 15: syncthing.config.v2.FolderConfiguration.Versioning.filesystem:type_name -> syncthing.config.v2.FolderConfiguration.Filesystem
	9,  // 16: syncthing.config.v2.FolderConfiguration.Versioning.params:type_name -> syncthing.config.v2.KV
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_config_v2_folder_configuration_proto_init() }
func file_config_v2_folder_configuration_proto_init() {
	if File_config_v2_folder_configuration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v2_folder_configuration_proto_rawDesc), len(file_config_v2_folder_configuration_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_v2_folder_configuration_proto_goTypes,
		DependencyIndexes: file_config_v2_folder_configuration_proto_depIdxs,
		EnumInfos:         file_config_v2_folder_configuration_proto_enumTypes,
		MessageInfos:      file_config_v2_folder_configuration_proto_msgTypes,
	}.Build()
	File_config_v2_folder_configuration_proto = out.File
	file_config_v2_folder_configuration_proto_goTypes = nil
	file_config_v2_folder_configuration_proto_depIdxs = nil
}
