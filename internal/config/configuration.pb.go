// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: internal/config/configuration.proto

package apiv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FolderType int32

const (
	FolderType_FOLDER_TYPE_UNSPECIFIED  FolderType = 0
	FolderType_FOLDER_TYPE_SEND_RECEIVE FolderType = 1
)

// Enum value maps for FolderType.
var (
	FolderType_name = map[int32]string{
		0: "FOLDER_TYPE_UNSPECIFIED",
		1: "FOLDER_TYPE_SEND_RECEIVE",
	}
	FolderType_value = map[string]int32{
		"FOLDER_TYPE_UNSPECIFIED":  0,
		"FOLDER_TYPE_SEND_RECEIVE": 1,
	}
)

func (x FolderType) Enum() *FolderType {
	p := new(FolderType)
	*p = x
	return p
}

func (x FolderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FolderType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_config_configuration_proto_enumTypes[0].Descriptor()
}

func (FolderType) Type() protoreflect.EnumType {
	return &file_internal_config_configuration_proto_enumTypes[0]
}

func (x FolderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type FilesystemType int32

const (
	FilesystemType_FILESYSTEM_TYPE_UNSPECIFIED FilesystemType = 0
)

// Enum value maps for FilesystemType.
var (
	FilesystemType_name = map[int32]string{
		0: "FILESYSTEM_TYPE_UNSPECIFIED",
	}
	FilesystemType_value = map[string]int32{
		"FILESYSTEM_TYPE_UNSPECIFIED": 0,
	}
)

func (x FilesystemType) Enum() *FilesystemType {
	p := new(FilesystemType)
	*p = x
	return p
}

func (x FilesystemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilesystemType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_config_configuration_proto_enumTypes[1].Descriptor()
}

func (FilesystemType) Type() protoreflect.EnumType {
	return &file_internal_config_configuration_proto_enumTypes[1]
}

func (x FilesystemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type PullOrder int32

const (
	PullOrder_PULL_ORDER_UNSPECIFIED PullOrder = 0
)

// Enum value maps for PullOrder.
var (
	PullOrder_name = map[int32]string{
		0: "PULL_ORDER_UNSPECIFIED",
	}
	PullOrder_value = map[string]int32{
		"PULL_ORDER_UNSPECIFIED": 0,
	}
)

func (x PullOrder) Enum() *PullOrder {
	p := new(PullOrder)
	*p = x
	return p
}

func (x PullOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PullOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_config_configuration_proto_enumTypes[2].Descriptor()
}

func (PullOrder) Type() protoreflect.EnumType {
	return &file_internal_config_configuration_proto_enumTypes[2]
}

func (x PullOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type BlockPullOrder int32

const (
	BlockPullOrder_BLOCK_PULL_ORDER_UNSPECIFIED BlockPullOrder = 0
)

// Enum value maps for BlockPullOrder.
var (
	BlockPullOrder_name = map[int32]string{
		0: "BLOCK_PULL_ORDER_UNSPECIFIED",
	}
	BlockPullOrder_value = map[string]int32{
		"BLOCK_PULL_ORDER_UNSPECIFIED": 0,
	}
)

func (x BlockPullOrder) Enum() *BlockPullOrder {
	p := new(BlockPullOrder)
	*p = x
	return p
}

func (x BlockPullOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockPullOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_config_configuration_proto_enumTypes[3].Descriptor()
}

func (BlockPullOrder) Type() protoreflect.EnumType {
	return &file_internal_config_configuration_proto_enumTypes[3]
}

func (x BlockPullOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type CopyRangeMethod int32

const (
	CopyRangeMethod_COPY_RANGE_METHOD_UNSPECIFIED CopyRangeMethod = 0
)

// Enum value maps for CopyRangeMethod.
var (
	CopyRangeMethod_name = map[int32]string{
		0: "COPY_RANGE_METHOD_UNSPECIFIED",
	}
	CopyRangeMethod_value = map[string]int32{
		"COPY_RANGE_METHOD_UNSPECIFIED": 0,
	}
)

func (x CopyRangeMethod) Enum() *CopyRangeMethod {
	p := new(CopyRangeMethod)
	*p = x
	return p
}

func (x CopyRangeMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CopyRangeMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_config_configuration_proto_enumTypes[4].Descriptor()
}

func (CopyRangeMethod) Type() protoreflect.EnumType {
	return &file_internal_config_configuration_proto_enumTypes[4]
}

func (x CopyRangeMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Configuration struct {
	state              protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Folders *[]*FolderConfiguration `protobuf:"bytes,1,rep,name=folders"`
	xxx_hidden_Devices *[]*DeviceConfiguration `protobuf:"bytes,2,rep,name=devices"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	mi := &file_internal_config_configuration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configuration) GetFolders() []*FolderConfiguration {
	if x != nil {
		if x.xxx_hidden_Folders != nil {
			return *x.xxx_hidden_Folders
		}
	}
	return nil
}

func (x *Configuration) GetDevices() []*DeviceConfiguration {
	if x != nil {
		if x.xxx_hidden_Devices != nil {
			return *x.xxx_hidden_Devices
		}
	}
	return nil
}

func (x *Configuration) SetFolders(v []*FolderConfiguration) {
	x.xxx_hidden_Folders = &v
}

func (x *Configuration) SetDevices(v []*DeviceConfiguration) {
	x.xxx_hidden_Devices = &v
}

type Configuration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Folders []*FolderConfiguration
	Devices []*DeviceConfiguration
}

func (b0 Configuration_builder) Build() *Configuration {
	m0 := &Configuration{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Folders = &b.Folders
	x.xxx_hidden_Devices = &b.Devices
	return m0
}

type OptionsConfiguration struct {
	state                      protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_ListenAddresses []string                         `protobuf:"bytes,1,rep,name=listen_addresses,json=listenAddresses"`
	xxx_hidden_RateLimits      *OptionsConfiguration_RateLimits `protobuf:"bytes,2,opt,name=rate_limits,json=rateLimits"`
	xxx_hidden_Nat             *OptionsConfiguration_NAT        `protobuf:"bytes,3,opt,name=nat"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *OptionsConfiguration) Reset() {
	*x = OptionsConfiguration{}
	mi := &file_internal_config_configuration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionsConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionsConfiguration) ProtoMessage() {}

func (x *OptionsConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OptionsConfiguration) GetListenAddresses() []string {
	if x != nil {
		return x.xxx_hidden_ListenAddresses
	}
	return nil
}

func (x *OptionsConfiguration) GetRateLimits() *OptionsConfiguration_RateLimits {
	if x != nil {
		return x.xxx_hidden_RateLimits
	}
	return nil
}

func (x *OptionsConfiguration) GetNat() *OptionsConfiguration_NAT {
	if x != nil {
		return x.xxx_hidden_Nat
	}
	return nil
}

func (x *OptionsConfiguration) SetListenAddresses(v []string) {
	x.xxx_hidden_ListenAddresses = v
}

func (x *OptionsConfiguration) SetRateLimits(v *OptionsConfiguration_RateLimits) {
	x.xxx_hidden_RateLimits = v
}

func (x *OptionsConfiguration) SetNat(v *OptionsConfiguration_NAT) {
	x.xxx_hidden_Nat = v
}

func (x *OptionsConfiguration) HasRateLimits() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RateLimits != nil
}

func (x *OptionsConfiguration) HasNat() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Nat != nil
}

func (x *OptionsConfiguration) ClearRateLimits() {
	x.xxx_hidden_RateLimits = nil
}

func (x *OptionsConfiguration) ClearNat() {
	x.xxx_hidden_Nat = nil
}

type OptionsConfiguration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ListenAddresses []string
	RateLimits      *OptionsConfiguration_RateLimits
	Nat             *OptionsConfiguration_NAT
}

func (b0 OptionsConfiguration_builder) Build() *OptionsConfiguration {
	m0 := &OptionsConfiguration{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ListenAddresses = b.ListenAddresses
	x.xxx_hidden_RateLimits = b.RateLimits
	x.xxx_hidden_Nat = b.Nat
	return m0
}

type FolderConfiguration struct {
	state                  protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Type        FolderType                      `protobuf:"varint,1,opt,name=type,enum=api.v2.FolderType,def=1"`
	xxx_hidden_Id          *string                         `protobuf:"bytes,2,opt,name=id"`
	xxx_hidden_Label       *string                         `protobuf:"bytes,3,opt,name=label"`
	xxx_hidden_Paused      bool                            `protobuf:"varint,4,opt,name=paused"`
	xxx_hidden_Filesystem  *FolderConfiguration_Filesystem `protobuf:"bytes,10,opt,name=filesystem"`
	xxx_hidden_Devices     *[]*FolderConfiguration_Device  `protobuf:"bytes,11,rep,name=devices"`
	xxx_hidden_Scanning    *FolderConfiguration_Scanning   `protobuf:"bytes,12,opt,name=scanning"`
	xxx_hidden_Syncing     *FolderConfiguration_Syncing    `protobuf:"bytes,13,opt,name=syncing"`
	xxx_hidden_Versioning  *FolderConfiguration_Versioning `protobuf:"bytes,14,opt,name=versioning"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

// Default values for FolderConfiguration fields.
const (
	Default_FolderConfiguration_Type = FolderType_FOLDER_TYPE_SEND_RECEIVE
)

func (x *FolderConfiguration) Reset() {
	*x = FolderConfiguration{}
	mi := &file_internal_config_configuration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration) ProtoMessage() {}

func (x *FolderConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration) GetType() FolderType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return Default_FolderConfiguration_Type
}

func (x *FolderConfiguration) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration) GetLabel() string {
	if x != nil {
		if x.xxx_hidden_Label != nil {
			return *x.xxx_hidden_Label
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration) GetPaused() bool {
	if x != nil {
		return x.xxx_hidden_Paused
	}
	return false
}

func (x *FolderConfiguration) GetFilesystem() *FolderConfiguration_Filesystem {
	if x != nil {
		return x.xxx_hidden_Filesystem
	}
	return nil
}

func (x *FolderConfiguration) GetDevices() []*FolderConfiguration_Device {
	if x != nil {
		if x.xxx_hidden_Devices != nil {
			return *x.xxx_hidden_Devices
		}
	}
	return nil
}

func (x *FolderConfiguration) GetScanning() *FolderConfiguration_Scanning {
	if x != nil {
		return x.xxx_hidden_Scanning
	}
	return nil
}

func (x *FolderConfiguration) GetSyncing() *FolderConfiguration_Syncing {
	if x != nil {
		return x.xxx_hidden_Syncing
	}
	return nil
}

func (x *FolderConfiguration) GetVersioning() *FolderConfiguration_Versioning {
	if x != nil {
		return x.xxx_hidden_Versioning
	}
	return nil
}

func (x *FolderConfiguration) SetType(v FolderType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *FolderConfiguration) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *FolderConfiguration) SetLabel(v string) {
	x.xxx_hidden_Label = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *FolderConfiguration) SetPaused(v bool) {
	x.xxx_hidden_Paused = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *FolderConfiguration) SetFilesystem(v *FolderConfiguration_Filesystem) {
	x.xxx_hidden_Filesystem = v
}

func (x *FolderConfiguration) SetDevices(v []*FolderConfiguration_Device) {
	x.xxx_hidden_Devices = &v
}

func (x *FolderConfiguration) SetScanning(v *FolderConfiguration_Scanning) {
	x.xxx_hidden_Scanning = v
}

func (x *FolderConfiguration) SetSyncing(v *FolderConfiguration_Syncing) {
	x.xxx_hidden_Syncing = v
}

func (x *FolderConfiguration) SetVersioning(v *FolderConfiguration_Versioning) {
	x.xxx_hidden_Versioning = v
}

func (x *FolderConfiguration) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration) HasLabel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration) HasPaused() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration) HasFilesystem() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filesystem != nil
}

func (x *FolderConfiguration) HasScanning() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Scanning != nil
}

func (x *FolderConfiguration) HasSyncing() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Syncing != nil
}

func (x *FolderConfiguration) HasVersioning() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Versioning != nil
}

func (x *FolderConfiguration) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Id = nil
}

func (x *FolderConfiguration) ClearLabel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Label = nil
}

func (x *FolderConfiguration) ClearPaused() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Paused = false
}

func (x *FolderConfiguration) ClearFilesystem() {
	x.xxx_hidden_Filesystem = nil
}

func (x *FolderConfiguration) ClearScanning() {
	x.xxx_hidden_Scanning = nil
}

func (x *FolderConfiguration) ClearSyncing() {
	x.xxx_hidden_Syncing = nil
}

func (x *FolderConfiguration) ClearVersioning() {
	x.xxx_hidden_Versioning = nil
}

type FolderConfiguration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type       *FolderType
	Id         *string
	Label      *string
	Paused     *bool
	Filesystem *FolderConfiguration_Filesystem
	Devices    []*FolderConfiguration_Device
	Scanning   *FolderConfiguration_Scanning
	Syncing    *FolderConfiguration_Syncing
	Versioning *FolderConfiguration_Versioning
}

func (b0 FolderConfiguration_builder) Build() *FolderConfiguration {
	m0 := &FolderConfiguration{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Type = *b.Type
	}
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.Label != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Label = b.Label
	}
	if b.Paused != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_Paused = *b.Paused
	}
	x.xxx_hidden_Filesystem = b.Filesystem
	x.xxx_hidden_Devices = &b.Devices
	x.xxx_hidden_Scanning = b.Scanning
	x.xxx_hidden_Syncing = b.Syncing
	x.xxx_hidden_Versioning = b.Versioning
	return m0
}

type Size struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Size) Reset() {
	*x = Size{}
	mi := &file_internal_config_configuration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Size_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Size_builder) Build() *Size {
	m0 := &Size{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type XattrFilter struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XattrFilter) Reset() {
	*x = XattrFilter{}
	mi := &file_internal_config_configuration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XattrFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XattrFilter) ProtoMessage() {}

func (x *XattrFilter) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type XattrFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 XattrFilter_builder) Build() *XattrFilter {
	m0 := &XattrFilter{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DeviceConfiguration struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceConfiguration) Reset() {
	*x = DeviceConfiguration{}
	mi := &file_internal_config_configuration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConfiguration) ProtoMessage() {}

func (x *DeviceConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeviceConfiguration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeviceConfiguration_builder) Build() *DeviceConfiguration {
	m0 := &DeviceConfiguration{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type OptionsConfiguration_RateLimits struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxSendKbps         int32                  `protobuf:"varint,1,opt,name=max_send_kbps,json=maxSendKbps"`
	xxx_hidden_MaxRecvKbps         int32                  `protobuf:"varint,2,opt,name=max_recv_kbps,json=maxRecvKbps"`
	xxx_hidden_LimitLanConnections bool                   `protobuf:"varint,3,opt,name=limit_lan_connections,json=limitLanConnections"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *OptionsConfiguration_RateLimits) Reset() {
	*x = OptionsConfiguration_RateLimits{}
	mi := &file_internal_config_configuration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionsConfiguration_RateLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionsConfiguration_RateLimits) ProtoMessage() {}

func (x *OptionsConfiguration_RateLimits) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OptionsConfiguration_RateLimits) GetMaxSendKbps() int32 {
	if x != nil {
		return x.xxx_hidden_MaxSendKbps
	}
	return 0
}

func (x *OptionsConfiguration_RateLimits) GetMaxRecvKbps() int32 {
	if x != nil {
		return x.xxx_hidden_MaxRecvKbps
	}
	return 0
}

func (x *OptionsConfiguration_RateLimits) GetLimitLanConnections() bool {
	if x != nil {
		return x.xxx_hidden_LimitLanConnections
	}
	return false
}

func (x *OptionsConfiguration_RateLimits) SetMaxSendKbps(v int32) {
	x.xxx_hidden_MaxSendKbps = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *OptionsConfiguration_RateLimits) SetMaxRecvKbps(v int32) {
	x.xxx_hidden_MaxRecvKbps = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *OptionsConfiguration_RateLimits) SetLimitLanConnections(v bool) {
	x.xxx_hidden_LimitLanConnections = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *OptionsConfiguration_RateLimits) HasMaxSendKbps() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OptionsConfiguration_RateLimits) HasMaxRecvKbps() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OptionsConfiguration_RateLimits) HasLimitLanConnections() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OptionsConfiguration_RateLimits) ClearMaxSendKbps() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxSendKbps = 0
}

func (x *OptionsConfiguration_RateLimits) ClearMaxRecvKbps() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxRecvKbps = 0
}

func (x *OptionsConfiguration_RateLimits) ClearLimitLanConnections() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LimitLanConnections = false
}

type OptionsConfiguration_RateLimits_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MaxSendKbps         *int32
	MaxRecvKbps         *int32
	LimitLanConnections *bool
}

func (b0 OptionsConfiguration_RateLimits_builder) Build() *OptionsConfiguration_RateLimits {
	m0 := &OptionsConfiguration_RateLimits{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxSendKbps != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_MaxSendKbps = *b.MaxSendKbps
	}
	if b.MaxRecvKbps != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_MaxRecvKbps = *b.MaxRecvKbps
	}
	if b.LimitLanConnections != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_LimitLanConnections = *b.LimitLanConnections
	}
	return m0
}

type OptionsConfiguration_NAT struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled          bool                   `protobuf:"varint,1,opt,name=enabled,def=1"`
	xxx_hidden_LeaseIntervalS   int32                  `protobuf:"varint,2,opt,name=lease_interval_s,json=leaseIntervalS"`
	xxx_hidden_RenewalIntervalS int32                  `protobuf:"varint,3,opt,name=renewal_interval_s,json=renewalIntervalS"`
	xxx_hidden_TimeoutIntervalS int32                  `protobuf:"varint,4,opt,name=timeout_interval_s,json=timeoutIntervalS"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

// Default values for OptionsConfiguration_NAT fields.
const (
	Default_OptionsConfiguration_NAT_Enabled = bool(true)
)

func (x *OptionsConfiguration_NAT) Reset() {
	*x = OptionsConfiguration_NAT{}
	mi := &file_internal_config_configuration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionsConfiguration_NAT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionsConfiguration_NAT) ProtoMessage() {}

func (x *OptionsConfiguration_NAT) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OptionsConfiguration_NAT) GetEnabled() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Enabled
		}
	}
	return Default_OptionsConfiguration_NAT_Enabled
}

func (x *OptionsConfiguration_NAT) GetLeaseIntervalS() int32 {
	if x != nil {
		return x.xxx_hidden_LeaseIntervalS
	}
	return 0
}

func (x *OptionsConfiguration_NAT) GetRenewalIntervalS() int32 {
	if x != nil {
		return x.xxx_hidden_RenewalIntervalS
	}
	return 0
}

func (x *OptionsConfiguration_NAT) GetTimeoutIntervalS() int32 {
	if x != nil {
		return x.xxx_hidden_TimeoutIntervalS
	}
	return 0
}

func (x *OptionsConfiguration_NAT) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *OptionsConfiguration_NAT) SetLeaseIntervalS(v int32) {
	x.xxx_hidden_LeaseIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *OptionsConfiguration_NAT) SetRenewalIntervalS(v int32) {
	x.xxx_hidden_RenewalIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *OptionsConfiguration_NAT) SetTimeoutIntervalS(v int32) {
	x.xxx_hidden_TimeoutIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *OptionsConfiguration_NAT) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OptionsConfiguration_NAT) HasLeaseIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OptionsConfiguration_NAT) HasRenewalIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OptionsConfiguration_NAT) HasTimeoutIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *OptionsConfiguration_NAT) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
}

func (x *OptionsConfiguration_NAT) ClearLeaseIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LeaseIntervalS = 0
}

func (x *OptionsConfiguration_NAT) ClearRenewalIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RenewalIntervalS = 0
}

func (x *OptionsConfiguration_NAT) ClearTimeoutIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TimeoutIntervalS = 0
}

type OptionsConfiguration_NAT_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enabled          *bool
	LeaseIntervalS   *int32
	RenewalIntervalS *int32
	TimeoutIntervalS *int32
}

func (b0 OptionsConfiguration_NAT_builder) Build() *OptionsConfiguration_NAT {
	m0 := &OptionsConfiguration_NAT{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.LeaseIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_LeaseIntervalS = *b.LeaseIntervalS
	}
	if b.RenewalIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_RenewalIntervalS = *b.RenewalIntervalS
	}
	if b.TimeoutIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_TimeoutIntervalS = *b.TimeoutIntervalS
	}
	return m0
}

type FolderConfiguration_Filesystem struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path            *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_FsType          FilesystemType         `protobuf:"varint,2,opt,name=fs_type,json=fsType,enum=api.v2.FilesystemType"`
	xxx_hidden_CaseSensitiveFs bool                   `protobuf:"varint,3,opt,name=case_sensitive_fs,json=caseSensitiveFs"`
	xxx_hidden_JunctionsAsDirs bool                   `protobuf:"varint,4,opt,name=junctions_as_dirs,json=junctionsAsDirs"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *FolderConfiguration_Filesystem) Reset() {
	*x = FolderConfiguration_Filesystem{}
	mi := &file_internal_config_configuration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Filesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Filesystem) ProtoMessage() {}

func (x *FolderConfiguration_Filesystem) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Filesystem) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *FolderConfiguration_Filesystem) GetFsType() FilesystemType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_FsType
		}
	}
	return FilesystemType_FILESYSTEM_TYPE_UNSPECIFIED
}

func (x *FolderConfiguration_Filesystem) GetCaseSensitiveFs() bool {
	if x != nil {
		return x.xxx_hidden_CaseSensitiveFs
	}
	return false
}

func (x *FolderConfiguration_Filesystem) GetJunctionsAsDirs() bool {
	if x != nil {
		return x.xxx_hidden_JunctionsAsDirs
	}
	return false
}

func (x *FolderConfiguration_Filesystem) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *FolderConfiguration_Filesystem) SetFsType(v FilesystemType) {
	x.xxx_hidden_FsType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *FolderConfiguration_Filesystem) SetCaseSensitiveFs(v bool) {
	x.xxx_hidden_CaseSensitiveFs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *FolderConfiguration_Filesystem) SetJunctionsAsDirs(v bool) {
	x.xxx_hidden_JunctionsAsDirs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *FolderConfiguration_Filesystem) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Filesystem) HasFsType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Filesystem) HasCaseSensitiveFs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Filesystem) HasJunctionsAsDirs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_Filesystem) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *FolderConfiguration_Filesystem) ClearFsType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FsType = FilesystemType_FILESYSTEM_TYPE_UNSPECIFIED
}

func (x *FolderConfiguration_Filesystem) ClearCaseSensitiveFs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CaseSensitiveFs = false
}

func (x *FolderConfiguration_Filesystem) ClearJunctionsAsDirs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_JunctionsAsDirs = false
}

type FolderConfiguration_Filesystem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Path            *string
	FsType          *FilesystemType
	CaseSensitiveFs *bool
	JunctionsAsDirs *bool
}

func (b0 FolderConfiguration_Filesystem_builder) Build() *FolderConfiguration_Filesystem {
	m0 := &FolderConfiguration_Filesystem{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Path = b.Path
	}
	if b.FsType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FsType = *b.FsType
	}
	if b.CaseSensitiveFs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CaseSensitiveFs = *b.CaseSensitiveFs
	}
	if b.JunctionsAsDirs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_JunctionsAsDirs = *b.JunctionsAsDirs
	}
	return m0
}

type FolderConfiguration_Device struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FolderConfiguration_Device) Reset() {
	*x = FolderConfiguration_Device{}
	mi := &file_internal_config_configuration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Device) ProtoMessage() {}

func (x *FolderConfiguration_Device) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type FolderConfiguration_Device_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 FolderConfiguration_Device_builder) Build() *FolderConfiguration_Device {
	m0 := &FolderConfiguration_Device{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type FolderConfiguration_Scanning struct {
	state                        protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Watcher           *FolderConfiguration_Scanning_Watcher `protobuf:"bytes,1,opt,name=watcher"`
	xxx_hidden_AutoNormalize     bool                                  `protobuf:"varint,12,opt,name=auto_normalize,json=autoNormalize,def=1"`
	xxx_hidden_SendOwnership     bool                                  `protobuf:"varint,34,opt,name=send_ownership,json=sendOwnership"`
	xxx_hidden_SendXattrs        bool                                  `protobuf:"varint,36,opt,name=send_xattrs,json=sendXattrs"`
	xxx_hidden_Hashers           int32                                 `protobuf:"varint,3,opt,name=hashers"`
	xxx_hidden_ModTimeWindowS    int32                                 `protobuf:"varint,26,opt,name=mod_time_window_s,json=modTimeWindowS"`
	xxx_hidden_ProgressIntervalS int32                                 `protobuf:"varint,19,opt,name=progress_interval_s,json=progressIntervalS"`
	xxx_hidden_RescanIntervalS   int32                                 `protobuf:"varint,2,opt,name=rescan_interval_s,json=rescanIntervalS,def=3600"`
	xxx_hidden_MarkerName        *string                               `protobuf:"bytes,25,opt,name=marker_name,json=markerName,def=.stfolder"`
	xxx_hidden_XattrFilter       *XattrFilter                          `protobuf:"bytes,37,opt,name=xattr_filter,json=xattrFilter"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

// Default values for FolderConfiguration_Scanning fields.
const (
	Default_FolderConfiguration_Scanning_AutoNormalize   = bool(true)
	Default_FolderConfiguration_Scanning_RescanIntervalS = int32(3600)
	Default_FolderConfiguration_Scanning_MarkerName      = string(".stfolder")
)

func (x *FolderConfiguration_Scanning) Reset() {
	*x = FolderConfiguration_Scanning{}
	mi := &file_internal_config_configuration_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Scanning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Scanning) ProtoMessage() {}

func (x *FolderConfiguration_Scanning) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Scanning) GetWatcher() *FolderConfiguration_Scanning_Watcher {
	if x != nil {
		return x.xxx_hidden_Watcher
	}
	return nil
}

func (x *FolderConfiguration_Scanning) GetAutoNormalize() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_AutoNormalize
		}
	}
	return Default_FolderConfiguration_Scanning_AutoNormalize
}

func (x *FolderConfiguration_Scanning) GetSendOwnership() bool {
	if x != nil {
		return x.xxx_hidden_SendOwnership
	}
	return false
}

func (x *FolderConfiguration_Scanning) GetSendXattrs() bool {
	if x != nil {
		return x.xxx_hidden_SendXattrs
	}
	return false
}

func (x *FolderConfiguration_Scanning) GetHashers() int32 {
	if x != nil {
		return x.xxx_hidden_Hashers
	}
	return 0
}

func (x *FolderConfiguration_Scanning) GetModTimeWindowS() int32 {
	if x != nil {
		return x.xxx_hidden_ModTimeWindowS
	}
	return 0
}

func (x *FolderConfiguration_Scanning) GetProgressIntervalS() int32 {
	if x != nil {
		return x.xxx_hidden_ProgressIntervalS
	}
	return 0
}

func (x *FolderConfiguration_Scanning) GetRescanIntervalS() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			return x.xxx_hidden_RescanIntervalS
		}
	}
	return Default_FolderConfiguration_Scanning_RescanIntervalS
}

func (x *FolderConfiguration_Scanning) GetMarkerName() string {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			if x.xxx_hidden_MarkerName != nil {
				return *x.xxx_hidden_MarkerName
			}
			return Default_FolderConfiguration_Scanning_MarkerName
		}
	}
	return Default_FolderConfiguration_Scanning_MarkerName
}

func (x *FolderConfiguration_Scanning) GetXattrFilter() *XattrFilter {
	if x != nil {
		return x.xxx_hidden_XattrFilter
	}
	return nil
}

func (x *FolderConfiguration_Scanning) SetWatcher(v *FolderConfiguration_Scanning_Watcher) {
	x.xxx_hidden_Watcher = v
}

func (x *FolderConfiguration_Scanning) SetAutoNormalize(v bool) {
	x.xxx_hidden_AutoNormalize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *FolderConfiguration_Scanning) SetSendOwnership(v bool) {
	x.xxx_hidden_SendOwnership = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *FolderConfiguration_Scanning) SetSendXattrs(v bool) {
	x.xxx_hidden_SendXattrs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *FolderConfiguration_Scanning) SetHashers(v int32) {
	x.xxx_hidden_Hashers = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *FolderConfiguration_Scanning) SetModTimeWindowS(v int32) {
	x.xxx_hidden_ModTimeWindowS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *FolderConfiguration_Scanning) SetProgressIntervalS(v int32) {
	x.xxx_hidden_ProgressIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *FolderConfiguration_Scanning) SetRescanIntervalS(v int32) {
	x.xxx_hidden_RescanIntervalS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *FolderConfiguration_Scanning) SetMarkerName(v string) {
	x.xxx_hidden_MarkerName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *FolderConfiguration_Scanning) SetXattrFilter(v *XattrFilter) {
	x.xxx_hidden_XattrFilter = v
}

func (x *FolderConfiguration_Scanning) HasWatcher() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Watcher != nil
}

func (x *FolderConfiguration_Scanning) HasAutoNormalize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning) HasSendOwnership() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Scanning) HasSendXattrs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_Scanning) HasHashers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *FolderConfiguration_Scanning) HasModTimeWindowS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *FolderConfiguration_Scanning) HasProgressIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *FolderConfiguration_Scanning) HasRescanIntervalS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *FolderConfiguration_Scanning) HasMarkerName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *FolderConfiguration_Scanning) HasXattrFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_XattrFilter != nil
}

func (x *FolderConfiguration_Scanning) ClearWatcher() {
	x.xxx_hidden_Watcher = nil
}

func (x *FolderConfiguration_Scanning) ClearAutoNormalize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning) ClearSendOwnership() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SendOwnership = false
}

func (x *FolderConfiguration_Scanning) ClearSendXattrs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SendXattrs = false
}

func (x *FolderConfiguration_Scanning) ClearHashers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Hashers = 0
}

func (x *FolderConfiguration_Scanning) ClearModTimeWindowS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ModTimeWindowS = 0
}

func (x *FolderConfiguration_Scanning) ClearProgressIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ProgressIntervalS = 0
}

func (x *FolderConfiguration_Scanning) ClearRescanIntervalS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
}

func (x *FolderConfiguration_Scanning) ClearMarkerName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
}

func (x *FolderConfiguration_Scanning) ClearXattrFilter() {
	x.xxx_hidden_XattrFilter = nil
}

type FolderConfiguration_Scanning_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Watcher           *FolderConfiguration_Scanning_Watcher
	AutoNormalize     *bool
	SendOwnership     *bool
	SendXattrs        *bool
	Hashers           *int32
	ModTimeWindowS    *int32
	ProgressIntervalS *int32
	RescanIntervalS   *int32
	MarkerName        *string
	XattrFilter       *XattrFilter
}

func (b0 FolderConfiguration_Scanning_builder) Build() *FolderConfiguration_Scanning {
	m0 := &FolderConfiguration_Scanning{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Watcher = b.Watcher
	if b.AutoNormalize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_AutoNormalize = *b.AutoNormalize
	}
	if b.SendOwnership != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_SendOwnership = *b.SendOwnership
	}
	if b.SendXattrs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_SendXattrs = *b.SendXattrs
	}
	if b.Hashers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_Hashers = *b.Hashers
	}
	if b.ModTimeWindowS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_ModTimeWindowS = *b.ModTimeWindowS
	}
	if b.ProgressIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_ProgressIntervalS = *b.ProgressIntervalS
	}
	if b.RescanIntervalS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_RescanIntervalS = *b.RescanIntervalS
	}
	if b.MarkerName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_MarkerName = b.MarkerName
	}
	x.xxx_hidden_XattrFilter = b.XattrFilter
	return m0
}

type FolderConfiguration_Syncing struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IgnorePerms         bool                   `protobuf:"varint,11,opt,name=ignore_perms,json=ignorePerms"`
	xxx_hidden_MinDiskFree         *Size                  `protobuf:"bytes,13,opt,name=min_disk_free,json=minDiskFree"`
	xxx_hidden_Copiers             int32                  `protobuf:"varint,15,opt,name=copiers,def=2"`
	xxx_hidden_PullerMaxPendingKib int32                  `protobuf:"varint,16,opt,name=puller_max_pending_kib,json=pullerMaxPendingKib,def=32768"`
	xxx_hidden_Order               PullOrder              `protobuf:"varint,18,opt,name=order,enum=api.v2.PullOrder"`
	xxx_hidden_PullerPauseS        int32                  `protobuf:"varint,20,opt,name=puller_pause_s,json=pullerPauseS,def=60"`
	xxx_hidden_MaxConflicts        int32                  `protobuf:"varint,21,opt,name=max_conflicts,json=maxConflicts,def=5"`
	xxx_hidden_SparseFiles         bool                   `protobuf:"varint,22,opt,name=sparse_files,json=sparseFiles,def=1"`
	xxx_hidden_MaxConcurrentWrites int32                  `protobuf:"varint,27,opt,name=max_concurrent_writes,json=maxConcurrentWrites,def=2"`
	xxx_hidden_DisableTempIndexes  bool                   `protobuf:"varint,23,opt,name=disable_temp_indexes,json=disableTempIndexes"`
	xxx_hidden_Fsync               bool                   `protobuf:"varint,28,opt,name=fsync,def=1"`
	xxx_hidden_BlockPullOrder      BlockPullOrder         `protobuf:"varint,29,opt,name=block_pull_order,json=blockPullOrder,enum=api.v2.BlockPullOrder"`
	xxx_hidden_CopyRangeMethod     CopyRangeMethod        `protobuf:"varint,30,opt,name=copy_range_method,json=copyRangeMethod,enum=api.v2.CopyRangeMethod"`
	xxx_hidden_SyncOwnership       bool                   `protobuf:"varint,33,opt,name=sync_ownership,json=syncOwnership"`
	xxx_hidden_SyncXattrs          bool                   `protobuf:"varint,35,opt,name=sync_xattrs,json=syncXattrs"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

// Default values for FolderConfiguration_Syncing fields.
const (
	Default_FolderConfiguration_Syncing_Copiers             = int32(2)
	Default_FolderConfiguration_Syncing_PullerMaxPendingKib = int32(32768)
	Default_FolderConfiguration_Syncing_PullerPauseS        = int32(60)
	Default_FolderConfiguration_Syncing_MaxConflicts        = int32(5)
	Default_FolderConfiguration_Syncing_SparseFiles         = bool(true)
	Default_FolderConfiguration_Syncing_MaxConcurrentWrites = int32(2)
	Default_FolderConfiguration_Syncing_Fsync               = bool(true)
)

func (x *FolderConfiguration_Syncing) Reset() {
	*x = FolderConfiguration_Syncing{}
	mi := &file_internal_config_configuration_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Syncing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Syncing) ProtoMessage() {}

func (x *FolderConfiguration_Syncing) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Syncing) GetIgnorePerms() bool {
	if x != nil {
		return x.xxx_hidden_IgnorePerms
	}
	return false
}

func (x *FolderConfiguration_Syncing) GetMinDiskFree() *Size {
	if x != nil {
		return x.xxx_hidden_MinDiskFree
	}
	return nil
}

func (x *FolderConfiguration_Syncing) GetCopiers() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Copiers
		}
	}
	return Default_FolderConfiguration_Syncing_Copiers
}

func (x *FolderConfiguration_Syncing) GetPullerMaxPendingKib() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_PullerMaxPendingKib
		}
	}
	return Default_FolderConfiguration_Syncing_PullerMaxPendingKib
}

func (x *FolderConfiguration_Syncing) GetOrder() PullOrder {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Order
		}
	}
	return PullOrder_PULL_ORDER_UNSPECIFIED
}

func (x *FolderConfiguration_Syncing) GetPullerPauseS() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_PullerPauseS
		}
	}
	return Default_FolderConfiguration_Syncing_PullerPauseS
}

func (x *FolderConfiguration_Syncing) GetMaxConflicts() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_MaxConflicts
		}
	}
	return Default_FolderConfiguration_Syncing_MaxConflicts
}

func (x *FolderConfiguration_Syncing) GetSparseFiles() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			return x.xxx_hidden_SparseFiles
		}
	}
	return Default_FolderConfiguration_Syncing_SparseFiles
}

func (x *FolderConfiguration_Syncing) GetMaxConcurrentWrites() int32 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_MaxConcurrentWrites
		}
	}
	return Default_FolderConfiguration_Syncing_MaxConcurrentWrites
}

func (x *FolderConfiguration_Syncing) GetDisableTempIndexes() bool {
	if x != nil {
		return x.xxx_hidden_DisableTempIndexes
	}
	return false
}

func (x *FolderConfiguration_Syncing) GetFsync() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 10) {
			return x.xxx_hidden_Fsync
		}
	}
	return Default_FolderConfiguration_Syncing_Fsync
}

func (x *FolderConfiguration_Syncing) GetBlockPullOrder() BlockPullOrder {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 11) {
			return x.xxx_hidden_BlockPullOrder
		}
	}
	return BlockPullOrder_BLOCK_PULL_ORDER_UNSPECIFIED
}

func (x *FolderConfiguration_Syncing) GetCopyRangeMethod() CopyRangeMethod {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 12) {
			return x.xxx_hidden_CopyRangeMethod
		}
	}
	return CopyRangeMethod_COPY_RANGE_METHOD_UNSPECIFIED
}

func (x *FolderConfiguration_Syncing) GetSyncOwnership() bool {
	if x != nil {
		return x.xxx_hidden_SyncOwnership
	}
	return false
}

func (x *FolderConfiguration_Syncing) GetSyncXattrs() bool {
	if x != nil {
		return x.xxx_hidden_SyncXattrs
	}
	return false
}

func (x *FolderConfiguration_Syncing) SetIgnorePerms(v bool) {
	x.xxx_hidden_IgnorePerms = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 15)
}

func (x *FolderConfiguration_Syncing) SetMinDiskFree(v *Size) {
	x.xxx_hidden_MinDiskFree = v
}

func (x *FolderConfiguration_Syncing) SetCopiers(v int32) {
	x.xxx_hidden_Copiers = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 15)
}

func (x *FolderConfiguration_Syncing) SetPullerMaxPendingKib(v int32) {
	x.xxx_hidden_PullerMaxPendingKib = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 15)
}

func (x *FolderConfiguration_Syncing) SetOrder(v PullOrder) {
	x.xxx_hidden_Order = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 15)
}

func (x *FolderConfiguration_Syncing) SetPullerPauseS(v int32) {
	x.xxx_hidden_PullerPauseS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 15)
}

func (x *FolderConfiguration_Syncing) SetMaxConflicts(v int32) {
	x.xxx_hidden_MaxConflicts = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 15)
}

func (x *FolderConfiguration_Syncing) SetSparseFiles(v bool) {
	x.xxx_hidden_SparseFiles = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 15)
}

func (x *FolderConfiguration_Syncing) SetMaxConcurrentWrites(v int32) {
	x.xxx_hidden_MaxConcurrentWrites = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 15)
}

func (x *FolderConfiguration_Syncing) SetDisableTempIndexes(v bool) {
	x.xxx_hidden_DisableTempIndexes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 15)
}

func (x *FolderConfiguration_Syncing) SetFsync(v bool) {
	x.xxx_hidden_Fsync = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 15)
}

func (x *FolderConfiguration_Syncing) SetBlockPullOrder(v BlockPullOrder) {
	x.xxx_hidden_BlockPullOrder = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 15)
}

func (x *FolderConfiguration_Syncing) SetCopyRangeMethod(v CopyRangeMethod) {
	x.xxx_hidden_CopyRangeMethod = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 15)
}

func (x *FolderConfiguration_Syncing) SetSyncOwnership(v bool) {
	x.xxx_hidden_SyncOwnership = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 15)
}

func (x *FolderConfiguration_Syncing) SetSyncXattrs(v bool) {
	x.xxx_hidden_SyncXattrs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 15)
}

func (x *FolderConfiguration_Syncing) HasIgnorePerms() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Syncing) HasMinDiskFree() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MinDiskFree != nil
}

func (x *FolderConfiguration_Syncing) HasCopiers() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Syncing) HasPullerMaxPendingKib() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_Syncing) HasOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *FolderConfiguration_Syncing) HasPullerPauseS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *FolderConfiguration_Syncing) HasMaxConflicts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *FolderConfiguration_Syncing) HasSparseFiles() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *FolderConfiguration_Syncing) HasMaxConcurrentWrites() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *FolderConfiguration_Syncing) HasDisableTempIndexes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *FolderConfiguration_Syncing) HasFsync() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *FolderConfiguration_Syncing) HasBlockPullOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *FolderConfiguration_Syncing) HasCopyRangeMethod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *FolderConfiguration_Syncing) HasSyncOwnership() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *FolderConfiguration_Syncing) HasSyncXattrs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *FolderConfiguration_Syncing) ClearIgnorePerms() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_IgnorePerms = false
}

func (x *FolderConfiguration_Syncing) ClearMinDiskFree() {
	x.xxx_hidden_MinDiskFree = nil
}

func (x *FolderConfiguration_Syncing) ClearCopiers() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Syncing) ClearPullerMaxPendingKib() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
}

func (x *FolderConfiguration_Syncing) ClearOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Order = PullOrder_PULL_ORDER_UNSPECIFIED
}

func (x *FolderConfiguration_Syncing) ClearPullerPauseS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
}

func (x *FolderConfiguration_Syncing) ClearMaxConflicts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
}

func (x *FolderConfiguration_Syncing) ClearSparseFiles() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
}

func (x *FolderConfiguration_Syncing) ClearMaxConcurrentWrites() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
}

func (x *FolderConfiguration_Syncing) ClearDisableTempIndexes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_DisableTempIndexes = false
}

func (x *FolderConfiguration_Syncing) ClearFsync() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
}

func (x *FolderConfiguration_Syncing) ClearBlockPullOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_BlockPullOrder = BlockPullOrder_BLOCK_PULL_ORDER_UNSPECIFIED
}

func (x *FolderConfiguration_Syncing) ClearCopyRangeMethod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_CopyRangeMethod = CopyRangeMethod_COPY_RANGE_METHOD_UNSPECIFIED
}

func (x *FolderConfiguration_Syncing) ClearSyncOwnership() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_SyncOwnership = false
}

func (x *FolderConfiguration_Syncing) ClearSyncXattrs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_SyncXattrs = false
}

type FolderConfiguration_Syncing_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	IgnorePerms         *bool
	MinDiskFree         *Size
	Copiers             *int32
	PullerMaxPendingKib *int32
	Order               *PullOrder
	PullerPauseS        *int32
	MaxConflicts        *int32
	SparseFiles         *bool
	MaxConcurrentWrites *int32
	DisableTempIndexes  *bool
	Fsync               *bool
	BlockPullOrder      *BlockPullOrder
	CopyRangeMethod     *CopyRangeMethod
	SyncOwnership       *bool
	SyncXattrs          *bool
}

func (b0 FolderConfiguration_Syncing_builder) Build() *FolderConfiguration_Syncing {
	m0 := &FolderConfiguration_Syncing{}
	b, x := &b0, m0
	_, _ = b, x
	if b.IgnorePerms != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 15)
		x.xxx_hidden_IgnorePerms = *b.IgnorePerms
	}
	x.xxx_hidden_MinDiskFree = b.MinDiskFree
	if b.Copiers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 15)
		x.xxx_hidden_Copiers = *b.Copiers
	}
	if b.PullerMaxPendingKib != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 15)
		x.xxx_hidden_PullerMaxPendingKib = *b.PullerMaxPendingKib
	}
	if b.Order != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 15)
		x.xxx_hidden_Order = *b.Order
	}
	if b.PullerPauseS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 15)
		x.xxx_hidden_PullerPauseS = *b.PullerPauseS
	}
	if b.MaxConflicts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 15)
		x.xxx_hidden_MaxConflicts = *b.MaxConflicts
	}
	if b.SparseFiles != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 15)
		x.xxx_hidden_SparseFiles = *b.SparseFiles
	}
	if b.MaxConcurrentWrites != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 15)
		x.xxx_hidden_MaxConcurrentWrites = *b.MaxConcurrentWrites
	}
	if b.DisableTempIndexes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 15)
		x.xxx_hidden_DisableTempIndexes = *b.DisableTempIndexes
	}
	if b.Fsync != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 15)
		x.xxx_hidden_Fsync = *b.Fsync
	}
	if b.BlockPullOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 15)
		x.xxx_hidden_BlockPullOrder = *b.BlockPullOrder
	}
	if b.CopyRangeMethod != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 15)
		x.xxx_hidden_CopyRangeMethod = *b.CopyRangeMethod
	}
	if b.SyncOwnership != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 15)
		x.xxx_hidden_SyncOwnership = *b.SyncOwnership
	}
	if b.SyncXattrs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 15)
		x.xxx_hidden_SyncXattrs = *b.SyncXattrs
	}
	return m0
}

type FolderConfiguration_Versioning struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FolderConfiguration_Versioning) Reset() {
	*x = FolderConfiguration_Versioning{}
	mi := &file_internal_config_configuration_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Versioning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Versioning) ProtoMessage() {}

func (x *FolderConfiguration_Versioning) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type FolderConfiguration_Versioning_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 FolderConfiguration_Versioning_builder) Build() *FolderConfiguration_Versioning {
	m0 := &FolderConfiguration_Versioning{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type FolderConfiguration_Scanning_Watcher struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,8,opt,name=enabled,def=1"`
	xxx_hidden_DelayS      float64                `protobuf:"fixed64,9,opt,name=delay_s,json=delayS,def=5"`
	xxx_hidden_TimeoutS    float64                `protobuf:"fixed64,10,opt,name=timeout_s,json=timeoutS,def=60"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

// Default values for FolderConfiguration_Scanning_Watcher fields.
const (
	Default_FolderConfiguration_Scanning_Watcher_Enabled  = bool(true)
	Default_FolderConfiguration_Scanning_Watcher_DelayS   = float64(5)
	Default_FolderConfiguration_Scanning_Watcher_TimeoutS = float64(60)
)

func (x *FolderConfiguration_Scanning_Watcher) Reset() {
	*x = FolderConfiguration_Scanning_Watcher{}
	mi := &file_internal_config_configuration_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderConfiguration_Scanning_Watcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderConfiguration_Scanning_Watcher) ProtoMessage() {}

func (x *FolderConfiguration_Scanning_Watcher) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_configuration_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FolderConfiguration_Scanning_Watcher) GetEnabled() bool {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Enabled
		}
	}
	return Default_FolderConfiguration_Scanning_Watcher_Enabled
}

func (x *FolderConfiguration_Scanning_Watcher) GetDelayS() float64 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_DelayS
		}
	}
	return Default_FolderConfiguration_Scanning_Watcher_DelayS
}

func (x *FolderConfiguration_Scanning_Watcher) GetTimeoutS() float64 {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_TimeoutS
		}
	}
	return Default_FolderConfiguration_Scanning_Watcher_TimeoutS
}

func (x *FolderConfiguration_Scanning_Watcher) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *FolderConfiguration_Scanning_Watcher) SetDelayS(v float64) {
	x.xxx_hidden_DelayS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *FolderConfiguration_Scanning_Watcher) SetTimeoutS(v float64) {
	x.xxx_hidden_TimeoutS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *FolderConfiguration_Scanning_Watcher) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Scanning_Watcher) HasDelayS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning_Watcher) HasTimeoutS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FolderConfiguration_Scanning_Watcher) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
}

func (x *FolderConfiguration_Scanning_Watcher) ClearDelayS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
}

func (x *FolderConfiguration_Scanning_Watcher) ClearTimeoutS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
}

type FolderConfiguration_Scanning_Watcher_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enabled  *bool
	DelayS   *float64
	TimeoutS *float64
}

func (b0 FolderConfiguration_Scanning_Watcher_builder) Build() *FolderConfiguration_Scanning_Watcher {
	m0 := &FolderConfiguration_Scanning_Watcher{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.DelayS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_DelayS = *b.DelayS
	}
	if b.TimeoutS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TimeoutS = *b.TimeoutS
	}
	return m0
}

var File_internal_config_configuration_proto protoreflect.FileDescriptor

const file_internal_config_configuration_proto_rawDesc = "" +
	"\n" +
	"#internal/config/configuration.proto\x12\x06api.v2\x1a!google/protobuf/go_features.proto\"}\n" +
	"\rConfiguration\x125\n" +
	"\afolders\x18\x01 \x03(\v2\x1b.api.v2.FolderConfigurationR\afolders\x125\n" +
	"\adevices\x18\x02 \x03(\v2\x1b.api.v2.DeviceConfigurationR\adevices\"\xf8\x03\n" +
	"\x14OptionsConfiguration\x12)\n" +
	"\x10listen_addresses\x18\x01 \x03(\tR\x0flistenAddresses\x12H\n" +
	"\vrate_limits\x18\x02 \x01(\v2'.api.v2.OptionsConfiguration.RateLimitsR\n" +
	"rateLimits\x122\n" +
	"\x03nat\x18\x03 \x01(\v2 .api.v2.OptionsConfiguration.NATR\x03nat\x1a\x88\x01\n" +
	"\n" +
	"RateLimits\x12\"\n" +
	"\rmax_send_kbps\x18\x01 \x01(\x05R\vmaxSendKbps\x12\"\n" +
	"\rmax_recv_kbps\x18\x02 \x01(\x05R\vmaxRecvKbps\x122\n" +
	"\x15limit_lan_connections\x18\x03 \x01(\bR\x13limitLanConnections\x1a\xab\x01\n" +
	"\x03NAT\x12\x1e\n" +
	"\aenabled\x18\x01 \x01(\b:\x04trueR\aenabled\x12(\n" +
	"\x10lease_interval_s\x18\x02 \x01(\x05R\x0eleaseIntervalS\x12,\n" +
	"\x12renewal_interval_s\x18\x03 \x01(\x05R\x10renewalIntervalS\x12,\n" +
	"\x12timeout_interval_s\x18\x04 \x01(\x05R\x10timeoutIntervalS\"\x97\x0f\n" +
	"\x13FolderConfiguration\x12@\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.api.v2.FolderType:\x18FOLDER_TYPE_SEND_RECEIVER\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x16\n" +
	"\x06paused\x18\x04 \x01(\bR\x06paused\x12F\n" +
	"\n" +
	"filesystem\x18\n" +
	" \x01(\v2&.api.v2.FolderConfiguration.FilesystemR\n" +
	"filesystem\x12<\n" +
	"\adevices\x18\v \x03(\v2\".api.v2.FolderConfiguration.DeviceR\adevices\x12@\n" +
	"\bscanning\x18\f \x01(\v2$.api.v2.FolderConfiguration.ScanningR\bscanning\x12=\n" +
	"\asyncing\x18\r \x01(\v2#.api.v2.FolderConfiguration.SyncingR\asyncing\x12F\n" +
	"\n" +
	"versioning\x18\x0e \x01(\v2&.api.v2.FolderConfiguration.VersioningR\n" +
	"versioning\x1a\xa9\x01\n" +
	"\n" +
	"Filesystem\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12/\n" +
	"\afs_type\x18\x02 \x01(\x0e2\x16.api.v2.FilesystemTypeR\x06fsType\x12*\n" +
	"\x11case_sensitive_fs\x18\x03 \x01(\bR\x0fcaseSensitiveFs\x12*\n" +
	"\x11junctions_as_dirs\x18\x04 \x01(\bR\x0fjunctionsAsDirs\x1a\b\n" +
	"\x06Device\x1a\xba\x04\n" +
	"\bScanning\x12F\n" +
	"\awatcher\x18\x01 \x01(\v2,.api.v2.FolderConfiguration.Scanning.WatcherR\awatcher\x12+\n" +
	"\x0eauto_normalize\x18\f \x01(\b:\x04trueR\rautoNormalize\x12%\n" +
	"\x0esend_ownership\x18\" \x01(\bR\rsendOwnership\x12\x1f\n" +
	"\vsend_xattrs\x18$ \x01(\bR\n" +
	"sendXattrs\x12\x18\n" +
	"\ahashers\x18\x03 \x01(\x05R\ahashers\x12)\n" +
	"\x11mod_time_window_s\x18\x1a \x01(\x05R\x0emodTimeWindowS\x12.\n" +
	"\x13progress_interval_s\x18\x13 \x01(\x05R\x11progressIntervalS\x120\n" +
	"\x11rescan_interval_s\x18\x02 \x01(\x05:\x043600R\x0frescanIntervalS\x12*\n" +
	"\vmarker_name\x18\x19 \x01(\t:\t.stfolderR\n" +
	"markerName\x126\n" +
	"\fxattr_filter\x18% \x01(\v2\x13.api.v2.XattrFilterR\vxattrFilter\x1af\n" +
	"\aWatcher\x12\x1e\n" +
	"\aenabled\x18\b \x01(\b:\x04trueR\aenabled\x12\x1a\n" +
	"\adelay_s\x18\t \x01(\x01:\x015R\x06delayS\x12\x1f\n" +
	"\ttimeout_s\x18\n" +
	" \x01(\x01:\x0260R\btimeoutS\x1a\xaf\x05\n" +
	"\aSyncing\x12!\n" +
	"\fignore_perms\x18\v \x01(\bR\vignorePerms\x120\n" +
	"\rmin_disk_free\x18\r \x01(\v2\f.api.v2.SizeR\vminDiskFree\x12\x1b\n" +
	"\acopiers\x18\x0f \x01(\x05:\x012R\acopiers\x12:\n" +
	"\x16puller_max_pending_kib\x18\x10 \x01(\x05:\x0532768R\x13pullerMaxPendingKib\x12'\n" +
	"\x05order\x18\x12 \x01(\x0e2\x11.api.v2.PullOrderR\x05order\x12(\n" +
	"\x0epuller_pause_s\x18\x14 \x01(\x05:\x0260R\fpullerPauseS\x12&\n" +
	"\rmax_conflicts\x18\x15 \x01(\x05:\x015R\fmaxConflicts\x12'\n" +
	"\fsparse_files\x18\x16 \x01(\b:\x04trueR\vsparseFiles\x125\n" +
	"\x15max_concurrent_writes\x18\x1b \x01(\x05:\x012R\x13maxConcurrentWrites\x120\n" +
	"\x14disable_temp_indexes\x18\x17 \x01(\bR\x12disableTempIndexes\x12\x1a\n" +
	"\x05fsync\x18\x1c \x01(\b:\x04trueR\x05fsync\x12@\n" +
	"\x10block_pull_order\x18\x1d \x01(\x0e2\x16.api.v2.BlockPullOrderR\x0eblockPullOrder\x12C\n" +
	"\x11copy_range_method\x18\x1e \x01(\x0e2\x17.api.v2.CopyRangeMethodR\x0fcopyRangeMethod\x12%\n" +
	"\x0esync_ownership\x18! \x01(\bR\rsyncOwnership\x12\x1f\n" +
	"\vsync_xattrs\x18# \x01(\bR\n" +
	"syncXattrs\x1a\f\n" +
	"\n" +
	"Versioning\"\x06\n" +
	"\x04Size\"\r\n" +
	"\vXattrFilter\"\x15\n" +
	"\x13DeviceConfiguration*G\n" +
	"\n" +
	"FolderType\x12\x1b\n" +
	"\x17FOLDER_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18FOLDER_TYPE_SEND_RECEIVE\x10\x01*1\n" +
	"\x0eFilesystemType\x12\x1f\n" +
	"\x1bFILESYSTEM_TYPE_UNSPECIFIED\x10\x00*'\n" +
	"\tPullOrder\x12\x1a\n" +
	"\x16PULL_ORDER_UNSPECIFIED\x10\x00*2\n" +
	"\x0eBlockPullOrder\x12 \n" +
	"\x1cBLOCK_PULL_ORDER_UNSPECIFIED\x10\x00*4\n" +
	"\x0fCopyRangeMethod\x12!\n" +
	"\x1dCOPY_RANGE_METHOD_UNSPECIFIED\x10\x00B\x97\x01\n" +
	"\n" +
	"com.api.v2B\x12ConfigurationProtoP\x01Z4github.com/syncthing/syncthing/internal/config;apiv2\xa2\x02\x03AXX\xaa\x02\x06Api.V2\xca\x02\x06Api\\V2\xe2\x02\x12Api\\V2\\GPBMetadata\xea\x02\aApi::V2\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_internal_config_configuration_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_internal_config_configuration_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_internal_config_configuration_proto_goTypes = []any{
	(FolderType)(0),                              // 0: api.v2.FolderType
	(FilesystemType)(0),                          // 1: api.v2.FilesystemType
	(PullOrder)(0),                               // 2: api.v2.PullOrder
	(BlockPullOrder)(0),                          // 3: api.v2.BlockPullOrder
	(CopyRangeMethod)(0),                         // 4: api.v2.CopyRangeMethod
	(*Configuration)(nil),                        // 5: api.v2.Configuration
	(*OptionsConfiguration)(nil),                 // 6: api.v2.OptionsConfiguration
	(*FolderConfiguration)(nil),                  // 7: api.v2.FolderConfiguration
	(*Size)(nil),                                 // 8: api.v2.Size
	(*XattrFilter)(nil),                          // 9: api.v2.XattrFilter
	(*DeviceConfiguration)(nil),                  // 10: api.v2.DeviceConfiguration
	(*OptionsConfiguration_RateLimits)(nil),      // 11: api.v2.OptionsConfiguration.RateLimits
	(*OptionsConfiguration_NAT)(nil),             // 12: api.v2.OptionsConfiguration.NAT
	(*FolderConfiguration_Filesystem)(nil),       // 13: api.v2.FolderConfiguration.Filesystem
	(*FolderConfiguration_Device)(nil),           // 14: api.v2.FolderConfiguration.Device
	(*FolderConfiguration_Scanning)(nil),         // 15: api.v2.FolderConfiguration.Scanning
	(*FolderConfiguration_Syncing)(nil),          // 16: api.v2.FolderConfiguration.Syncing
	(*FolderConfiguration_Versioning)(nil),       // 17: api.v2.FolderConfiguration.Versioning
	(*FolderConfiguration_Scanning_Watcher)(nil), // 18: api.v2.FolderConfiguration.Scanning.Watcher
}
var file_internal_config_configuration_proto_depIdxs = []int32{
	7,  // 0: api.v2.Configuration.folders:type_name -> api.v2.FolderConfiguration
	10, // 1: api.v2.Configuration.devices:type_name -> api.v2.DeviceConfiguration
	11, // 2: api.v2.OptionsConfiguration.rate_limits:type_name -> api.v2.OptionsConfiguration.RateLimits
	12, // 3: api.v2.OptionsConfiguration.nat:type_name -> api.v2.OptionsConfiguration.NAT
	0,  // 4: api.v2.FolderConfiguration.type:type_name -> api.v2.FolderType
	13, // 5: api.v2.FolderConfiguration.filesystem:type_name -> api.v2.FolderConfiguration.Filesystem
	14, // 6: api.v2.FolderConfiguration.devices:type_name -> api.v2.FolderConfiguration.Device
	15, // 7: api.v2.FolderConfiguration.scanning:type_name -> api.v2.FolderConfiguration.Scanning
	16, // 8: api.v2.FolderConfiguration.syncing:type_name -> api.v2.FolderConfiguration.Syncing
	17, // 9: api.v2.FolderConfiguration.versioning:type_name -> api.v2.FolderConfiguration.Versioning
	1,  // 10: api.v2.FolderConfiguration.Filesystem.fs_type:type_name -> api.v2.FilesystemType
	18, // 11: api.v2.FolderConfiguration.Scanning.watcher:type_name -> api.v2.FolderConfiguration.Scanning.Watcher
	9,  // 12: api.v2.FolderConfiguration.Scanning.xattr_filter:type_name -> api.v2.XattrFilter
	8,  // 13: api.v2.FolderConfiguration.Syncing.min_disk_free:type_name -> api.v2.Size
	2,  // 14: api.v2.FolderConfiguration.Syncing.order:type_name -> api.v2.PullOrder
	3,  // 15: api.v2.FolderConfiguration.Syncing.block_pull_order:type_name -> api.v2.BlockPullOrder
	4,  // 16: api.v2.FolderConfiguration.Syncing.copy_range_method:type_name -> api.v2.CopyRangeMethod
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_internal_config_configuration_proto_init() }
func file_internal_config_configuration_proto_init() {
	if File_internal_config_configuration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_config_configuration_proto_rawDesc), len(file_internal_config_configuration_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_config_configuration_proto_goTypes,
		DependencyIndexes: file_internal_config_configuration_proto_depIdxs,
		EnumInfos:         file_internal_config_configuration_proto_enumTypes,
		MessageInfos:      file_internal_config_configuration_proto_msgTypes,
	}.Build()
	File_internal_config_configuration_proto = out.File
	file_internal_config_configuration_proto_goTypes = nil
	file_internal_config_configuration_proto_depIdxs = nil
}
